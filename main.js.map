{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AACuD;AAC8B;AACP;AACJ;AACwB;AACrB;AACH;;;AAE1E,IAAIO,MAAM,GAAW,CACjB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAC,MAAM;EAACC,SAAS,EAAC;AAAM,CAAE,EAChD;EAAEF,IAAI,EAAE,MAAM;EAAEG,SAAS,EAAER,qFAAcA;AAAA,CAAE,EAC3C;EAAEK,IAAI,EAAE,SAAS;EAAEG,SAAS,EAAEN,wFAAeA;AAAA,CAAE,EAC/C;EAAEG,IAAI,EAAE,KAAK;EAAEG,SAAS,EAAEL,qFAAgBA;AAAA,CAAE,EAC5C;EAAEE,IAAI,EAAE,iBAAiB;EAAEG,SAAS,EAAEP,6GAAsBA;AAAA,CAAE,EAC9D;EAAEI,IAAI,EAAE,SAAS;EAAEG,SAAS,EAAET,yFAAgBA;AAAA,CAAE,CACnD;AAED,MAIaU,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA;AAAgB;AAAhBA,gBAAgB;YAHfZ,iEAAoB,CAACO,MAAM,EAAC;IAAEO,mBAAmB,EAAE;EAAQ,CAAE,CAAC,EAC9Dd,yDAAY;AAAA;AAEG;;sHAAhBY,gBAAgB;IAAAG,OAAA,GAAAC,yDAAA;IAAAC,OAAA,GAFfjB,yDAAY;EAAA;AAAA;AAKnB,MAAMkB,iBAAiB,GAAG,CAACjB,8FAAiB,EAACE,qFAAc,EAACC,6GAAsB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBpC;AAEC;;;;;;;;;;;;;;;;;;ICCrDgB,4DAAA,iBAAkI;IAE9HA,uDAAA,aAAmF;IACnFA,4DAAA,qBAAgB;IAAAA,oDAAA,GAAkB;IAAAA,0DAAA,EAAiB;;;;;IAHgDA,wDAAA,sBAAAM,GAAA,CAA0B;IAG7GN,uDAAA,GAAkB;IAAlBA,+DAAA,CAAAS,MAAA,CAAAC,cAAA,CAAkB;;;;;;IAYhCV,4DAAA,iBAA6D;IAA2BA,oDAAA,qBAAc;IAAAA,0DAAA,EAAW;IAACA,oDAAA,oBAAY;IAAAA,0DAAA,EAAS;IACvIA,4DAAA,iBAA0D;IAAlCA,wDAAA,mBAAAY,6DAAA;MAAAZ,2DAAA,CAAAc,GAAA;MAAA,MAAAC,MAAA,GAAAf,2DAAA;MAAA,OAASA,yDAAA,CAAAe,MAAA,CAAAG,MAAA,EAAQ;IAAA,EAAC;IAAgBlB,4DAAA,mBAA2B;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAW;IAACA,oDAAA,eAAO;IAAAA,0DAAA,EAAS;;;;;;IAQlIA,4DAAA,kBAAoE;IAAhCA,wDAAA,sBAAAmB,6DAAAC,MAAA;MAAApB,2DAAA,CAAAqB,GAAA;MAAA,MAAAC,MAAA,GAAAtB,2DAAA;MAAA,OAAYA,yDAAA,CAAAsB,MAAA,CAAAC,UAAA,CAAAH,MAAA,CAAkB;IAAA,EAAC;IAACpB,0DAAA,EAAU;;;;;;IAC9EA,4DAAA,iBAAgE;IAAhCA,wDAAA,sBAAAwB,2DAAAJ,MAAA;MAAApB,2DAAA,CAAAyB,IAAA;MAAA,MAAAC,OAAA,GAAA1B,2DAAA;MAAA,OAAYA,yDAAA,CAAA0B,OAAA,CAAAH,UAAA,CAAAH,MAAA,CAAkB;IAAA,EAAC;IAACpB,0DAAA,EAAS;;;;;IACzEA,uDAAA,eAAsC;;;ADxBxC,MAKa2B,YAAY;EAQvBC,YAAsBC,OAAe,EAAUC,sBAA8C;IAC3F;IACA;IAFoB,KAAAD,OAAO,GAAPA,OAAO;IAAkB,KAAAC,sBAAsB,GAAtBA,sBAAsB;IALrE,KAAApB,cAAc,GAAQ,EAAE;IACxB,KAAAqB,WAAW,GAAQ,EAAE;IACrB,KAAAC,YAAY,GAAQ,EAAE;IAsDH,KAAAlC,iBAAiB,GAAGA,kEAAiB;IA/CtD,IAAI,CAAC+B,OAAO,CAACI,MAAM,CAACC,SAAS,CAAEC,CAAC,IAAI;MAElC,IAAI,CAACzB,cAAc,GAAG0B,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;MAC5D,IAAI,CAACN,WAAW,GAAGK,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACtD,IAAI,CAACL,YAAY,GAAGI,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAExD,IAAIF,CAAC,YAAYpC,0DAAa,EAAE;QAC9B,IAAI,CAACuC,eAAe,GAAGH,CAAC,CAACI,GAAG;QAE5BC,OAAO,CAACC,GAAG,CAACN,CAAC,CAACI,GAAG,CAAC;QAClBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC/B,cAAc,CAAC;QAEhC;QACA,IAAG,CAAC,IAAI,CAACA,cAAc,IAAE,EAAE,IAAI,CAAC,IAAI,CAACA,cAAc,KAAKyB,CAAC,CAACI,GAAG,IAAE,UAAU,EAAC;UACxE,IAAI,CAACD,eAAe,GAAG,OAAO;;QAEhC;QAAA,KACK,IAAI,IAAI,CAAC5B,cAAc,IAAE,EAAE,IAAI,IAAI,CAACA,cAAc,IAAMyB,CAAC,CAACI,GAAG,IAAI,SAAS,GAAC,IAAI,CAAC7B,cAAc,IAAIyB,CAAC,CAACI,GAAG,IAAG,UAAW,EAAC;UACzH;UACA;UACA;UACA;UACA,IAAI,CAACV,OAAO,CAACa,aAAa,CAAC,UAAU,IAAI,CAAChC,cAAc,EAAE,CAAC;;;IAIjE,CAAC,CAAC;EACJ;EAEAQ,MAAMA,CAAA;IACJkB,YAAY,CAACO,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC;IAC1C,IAAI,CAACd,OAAO,CAACa,aAAa,CAAC,OAAO,CAAC;EACrC;EAEAnB,UAAUA,CAACqB,IAAU;IACnB;IACAR,YAAY,CAACO,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,QAAQ,CAAC;IACrDT,YAAY,CAACO,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACE,KAAK,CAAC;IAC/CV,YAAY,CAACO,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACG,QAAQ,CAAC;IAErD,IAAI,CAAClB,OAAO,CAACa,aAAa,CAAC,UAAUE,IAAI,CAACC,QAAQ,EAAE,CAAC;EACvD;EAEAG,QAAQA,CAAA,GACR;;AAxDWrB,YAAY;mBAAZA,YAAY,EAAA3B,+DAAA,CAAAJ,mDAAA,GAAAI,+DAAA,CAAAmD,yFAAA;AAAA;AAAZxB,YAAY;QAAZA,YAAY;EAAA0B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXzB3D,4DAAA,qBAA0B;MACYA,oDAAA,8BAAsB;MAAAA,0DAAA,EAAkB;MAG5EA,wDAAA,IAAA8D,8BAAA,oBAKS;MACT9D,4DAAA,qBAA8D;MAE1DA,uDAAA,aAAkF;MAClFA,4DAAA,qBAAgB;MAAAA,oDAAA,GAA4B;;MAAAA,0DAAA,EAAiB;MAC7DA,4DAAA,yBAAmB;MAAAA,oDAAA,IAAe;MAAAA,0DAAA,EAAoB;MAExDA,uDAAA,mBAA2B;MAC3BA,4DAAA,uBAAiB;MACfA,wDAAA,KAAA+D,oCAAA,yBAGc;MAChB/D,0DAAA,EAAkB;MAKtBA,4DAAA,uBAA2C;MACzCA,wDAAA,KAAAgE,gCAAA,qBAA8E;MAC9EhE,wDAAA,KAAAiE,+BAAA,oBAAyE;MACzEjE,wDAAA,KAAAkE,iCAAA,sBAAsC;MACxClE,0DAAA,EAAe;;;MA3BJA,uDAAA,GAA2C;MAA3CA,wDAAA,SAAA4D,GAAA,CAAA/B,OAAA,CAAAU,GAAA,gBAAAqB,GAAA,CAAAlD,cAAA,CAA2C;MAShCV,uDAAA,GAA4B;MAA5BA,+DAAA,CAAAA,yDAAA,QAAA4D,GAAA,CAAAlD,cAAA,EAA4B;MACzBV,uDAAA,GAAe;MAAfA,+DAAA,CAAA4D,GAAA,CAAA7B,WAAA,CAAe;MAa1B/B,uDAAA,GAA4B;MAA5BA,wDAAA,aAAA4D,GAAA,CAAAtB,eAAA,CAA4B;MAC9BtC,uDAAA,GAAwB;MAAxBA,wDAAA,4BAAwB;MACzBA,uDAAA,GAAqB;MAArBA,wDAAA,yBAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7B0B;AAGX;AACgC;AACsC;AAC/D;AACI;AACM;AACa;AAEJ;AACG;AACG;AACiB;AAC3C;AACE;AACE;AACE;AACA;AACE;AACe;AACvB;AACA;AAC4D;AACrC;AACuB;AAC5C;AACA;AACE;AACP;AACG;AACU;AAED;AACC;AACD;AACP;AACa;;;;;;;;;;;AAEpE,MAoDauG,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,SAAA,GAFR7E,wDAAY;AAAA;AAEb4E,SAAS;aAHT,CAAC9B,qEAAW,EAAC;IAACgC,OAAO,EAAEf,iFAA0B;IAAEgB,QAAQ,EAAE;MAACC,WAAW,EAAE;IAAI;EAAC,CAAC,CAAC;EAAAhH,OAAA,GA/B3FyE,qEAAa,EACbC,0FAAuB,EACvBG,mEAAgB,EAChBE,wDAAW,EACXlF,iEAAgB,EAEhBsF,kEAAa,EACbC,oEAAc,EACdJ,gEAAmB,EACnBK,sEAAe,EACfC,wEAAgB,EAChBC,wEAAgB,EAChBC,0EAAiB,EACjBC,kEAAa,EACbC,kEAAa,EAGbI,mEAAc,EACdE,sEAAe,EACfC,oEAAc,EACdC,oEAAe,EACfC,sEAAe,EACfC,+DAAc,EACdC,kEAAa,EACbC,4EAAkB,EAClBC,2EAAiB,EACjBC,4EAAkB,EAClBC,2EAAiB,EACjBC,oEAAc,EACdC,iFAAoB;AAAA;AAKF;;sHAATC,SAAS;IAAAK,YAAA,GAlDlBtB,oGAAa,EACb3D,wDAAY,EAAA/B,8FAAA,EAAAuD,qFAAA,EAAA0D,6GAAA,EAEZ9H,qFAAc,EACdE,wFAAe,EACfH,yFAAgB,EAChBI,qFAAgB,EAChBF,6GAAsB,EACtBsF,6FAAgB,EAChBC,2FAAc,EACd1F,8FAAiB,EACjBE,qFAAc,EACdE,wFAAe,EACf4F,yFAAgB;IAAAlF,OAAA,GAGhByE,qEAAa,EACbC,0FAAuB,EACvBG,mEAAgB,EAChBE,wDAAW,EACXlF,iEAAgB,EAChBoF,wDAAU,EACVE,kEAAa,EACbC,oEAAc,EACdJ,gEAAmB,EACnBK,sEAAe,EACfC,wEAAgB,EAChBC,wEAAgB,EAChBC,0EAAiB,EACjBC,kEAAa,EACbC,kEAAa,EACbG,gEAAW,EACXD,4DAAO,EACPE,mEAAc,EACdE,sEAAe,EACfC,oEAAc,EACdC,oEAAe,EACfC,sEAAe,EACfC,+DAAc,EACdC,kEAAa,EACbC,4EAAkB,EAClBC,2EAAiB,EACjBC,4EAAkB,EAClBC,2EAAiB,EACjBC,oEAAc,EACdC,iFAAoB;EAAA;AAAA;8xBAnCpBzH,8FAAiB;kEAHjBG,6GAAsB,GAAA8H,qDAAA,EAAAA,qDAAA,EAAAA,kDAAA,EAAAI,4DAAA,EAAAE,gEAAA,EAAAE,4DAAA,EAAAE,gEAAA,EAAAA,4DAAA,EAAAA,kEAAA,EAAAE,sEAAA,EAGtB7I,8FAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IE5CPmB,4DAAA,kBAA6C;IAAAA,oDAAA,gBAAS;IAAAA,0DAAA,EAAW;;;;;IAEjEA,4DAAA,kBAA6C;IAAAA,oDAAA,qBAAc;IAAAA,0DAAA,EAAW;;;;;IAP5EA,4DAAA,sBAAwE;IAKlEA,wDAAA,IAAA4H,mDAAA,uBAAiE;IAEjE5H,wDAAA,IAAA6H,mDAAA,uBAAsE;IAEtE7H,oDAAA,GACF;;IAAAA,0DAAA,EAAK;;;;;IARyBA,uDAAA,GAAoB;IAApBA,wDAAA,eAAA8H,QAAA,CAAoB;IACD9H,uDAAA,GAAc;IAAdA,wDAAA,aAAA+H,IAAA,CAAc;IAElD/H,uDAAA,GAAe;IAAfA,wDAAA,mBAAe;IAEfA,uDAAA,GAAe;IAAfA,wDAAA,mBAAe;IAE1BA,uDAAA,GACF;IADEA,gEAAA,MAAAA,yDAAA,OAAA8H,QAAA,CAAAG,KAAA,eACF;;;ADRZ,MAKa/I,gBAAgB;EAO3B0C,YAAoBE,sBAA8C,EAAUoG,OAAe;IAAvE,KAAApG,sBAAsB,GAAtBA,sBAAsB;IAAkC,KAAAoG,OAAO,GAAPA,OAAO;IALnF,KAAAC,IAAI,GAAG,IAAI;IACX,KAAAvF,IAAI,GAAUR,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAMpD;IACmB,KAAAlD,MAAM,GAAI,CAAC,IAAI,CAAC+I,OAAO,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACjJ,IAAI,CAAC6I,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,IAAI,CAACrF,IAAI,EAAC,IAAI,CAACsF,OAAO,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACjJ,IAAI,CAAC;IAE7G,KAAAoD,OAAO,GAAGA,OAAO;EAL0D;;AAPnFtD,gBAAgB;mBAAhBA,gBAAgB,EAAAc,+DAAA,CAAAJ,yFAAA,GAAAI,+DAAA,CAAAmD,mDAAA;AAAA;AAAhBjE,gBAAgB;QAAhBA,gBAAgB;EAAAmE,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAA6E,0BAAA3E,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCV7B3D,4DAAA,+BAAiD;MAGzCA,wDAAA,IAAAuI,wCAAA,0BAqBe;MAEnBvI,0DAAA,EAAc;MAIdA,4DAAA,0BAAqB;MAEsEA,wDAAA,mBAAAwI,kDAAA;QAAAxI,2DAAA,CAAAyI,GAAA;QAAA,MAAAC,GAAA,GAAA1I,yDAAA;QAAA,OAASA,yDAAA,CAAA0I,GAAA,CAAAE,MAAA,EAAgB;MAAA,EAAC;MACzG5I,4DAAA,WAAoB;MAAUA,oDAAA,WAAI;MAAAA,0DAAA,EAAW;MAEnDA,uDAAA,qBAA+B;MACjCA,0DAAA,EAAM;;;;MAjC2CA,uDAAA,GAAW;MAAXA,wDAAA,YAAA4D,GAAA,CAAAzE,MAAA,CAAW;MA6BhDa,uDAAA,GAA6B;MAA7BA,yDAAA,SAAA0I,GAAA,CAAAI,MAAA,CAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB1B;AAG2D;AAIhB;AAC9B;;;;;;;;;;;;;;;;ICfhC9I,4DAAA,mBAAoD;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAW;;;;;IAEtEA,4DAAA,mBAA0D;IAAAA,oDAAA,oBAAa;IAAAA,0DAAA,EAAW;;;;;IAElFA,4DAAA,mBAAsD;IAAAA,oDAAA,mBAAY;IAAAA,0DAAA,EAAW;;;;;;IARjFA,4DAAA,gBAA+C;IAI3CA,wDAAA,IAAAqJ,2CAAA,sBAAsE;IAEtErJ,wDAAA,IAAAsJ,2CAAA,sBAAkF;IAElFtJ,wDAAA,IAAAuJ,2CAAA,sBAA6E;IAC/EvJ,0DAAA,EAAM;IAENA,4DAAA,gBAA8D;IAAvBA,wDAAA,mBAAAwJ,yDAAA;MAAAxJ,2DAAA,CAAAyI,GAAA;MAAA,MAAAgB,MAAA,GAAAzJ,2DAAA;MAAA,OAASA,yDAAA,CAAAyJ,MAAA,CAAAC,UAAA,EAAY;IAAA,EAAC;IAAC1J,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAW;IACxFA,4DAAA,WAA2E;IAAvCA,wDAAA,mBAAA2J,oDAAA;MAAA3J,2DAAA,CAAAyI,GAAA;MAAA,MAAAmB,MAAA,GAAA5J,2DAAA;MAAA,OAASA,yDAAA,CAAA4J,MAAA,CAAAC,UAAA,EAAY;IAAA,EAAC;IACxD7J,oDAAA,IACF;IAAAA,0DAAA,EAAI;IACJA,4DAAA,cAAwB;IACtBA,oDAAA,IACF;IAAAA,0DAAA,EAAM;IAONA,4DAAA,eAA8B;IAChCA,oDAAA,IACA;IAEEA,0DAAA,EAAM;;;;IAzBDA,uDAAA,GAA0B;IAA1BA,wDAAA,aAAAS,MAAA,CAAAqJ,IAAA,CAAAC,QAAA,CAA0B;IACC/J,uDAAA,GAAoB;IAApBA,wDAAA,wBAAoB;IAEhBA,uDAAA,GAAsB;IAAtBA,wDAAA,0BAAsB;IAEvBA,uDAAA,GAAmB;IAAnBA,wDAAA,uBAAmB;IAKpDA,uDAAA,GACF;IADEA,gEAAA,YAAAS,MAAA,CAAAqJ,IAAA,CAAAE,EAAA,MACF;IAEEhK,uDAAA,GACF;IADEA,gEAAA,MAAAS,MAAA,CAAAqJ,IAAA,CAAAG,KAAA,MACF;IAQFjK,uDAAA,GACA;IADAA,gEAAA,OAAAS,MAAA,CAAAqJ,IAAA,CAAAI,WAAA,OACA;;;;;;ICgCMlK,4DAAA,gBAA6B;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAY;;;AFpC1D,MAKanB,iBAAiB;EAY1B+C,YAAoBuI,YAAyB,EAAQC,MAAiB;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAqB,KAAAC,MAAM,GAANA,MAAM;IAJ3D,KAAAC,YAAY,GAAG,IAAItB,uDAAY,EAAW;IA4BzB,KAAAuB,MAAM,GAAGA,MAAM;EAxByC;EAEzEtH,QAAQA,CAAA,GACR;EAEA0G,UAAUA,CAAA;IACN,IAAI,CAACU,MAAM,CAACG,IAAI,CAACjG,gBAAgB,EAAE;MACjCkG,YAAY,EAAC,IAAI;MACfC,IAAI,EAAE;QAAET,EAAE,EAAG,IAAI,CAACF,IAAI,CAACE;MAAE;KAC5B,CAAC,CAACU,WAAW,EAAE,CAACxI,SAAS,CAAC,MAAI;MAC3B,IAAI,CAACmI,YAAY,CAACM,IAAI,EAAE;IAC5B,CAAC,CAAC;EACN;EAEAd,UAAUA,CAAA;IAER,IAAI,CAACO,MAAM,CAACG,IAAI,CAAChG,cAAc,EAAE;MAC/BiG,YAAY,EAAC,IAAI;MACjBC,IAAI,EAAE,IAAI,CAACX;KACZ,CAAC,CAACY,WAAW,EAAE,CAACxI,SAAS,CAAC,MAAI;MAC7B,IAAI,CAACmI,YAAY,CAACM,IAAI,EAAE;IAC1B,CAAC,CAAC;EACJ;;AAlCS9L,iBAAiB;mBAAjBA,iBAAiB,EAAAmB,+DAAA,CAAAJ,qEAAA,GAAAI,+DAAA,CAAAmD,+DAAA;AAAA;AAAjBtE,iBAAiB;QAAjBA,iBAAiB;EAAAwE,SAAA;EAAAwH,MAAA;IAAAf,IAAA;EAAA;EAAAgB,OAAA;IAAAT,YAAA;EAAA;EAAA/G,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAsH,2BAAApH,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MC3B9B3D,wDAAA,IAAAgL,gCAAA,kBAkCM;;;MAlCkBhL,wDAAA,SAAA4D,GAAA,CAAAkG,IAAA,CAAU;;;;;;AD2BJ;AAuC9B,MAKaxF,gBAAgB;EAIzB1C,YACWqJ,SAAsC,EACbR,IAAS,EACjCN,YAAyB,EACzBe,SAAsB;IAHvB,KAAAD,SAAS,GAATA,SAAS;IACgB,KAAAR,IAAI,GAAJA,IAAI;IAC5B,KAAAN,YAAY,GAAZA,YAAY;IACZ,KAAAe,SAAS,GAATA,SAAS;EACpB;EAEDlI,QAAQA,CAAA,GAAG;EAEXmI,WAAWA,CAAA;IACP,IAAG,IAAI,CAACzB,UAAU,EAAC;MACf,IAAI,CAACA,UAAU,CAAC0B,WAAW,EAAE;;EAErC;EAIAC,SAASA,CAAA;IACL,IAAI,CAAC3B,UAAU,GAAG,IAAI,CAACS,YAAY,CAACmB,MAAM,CAAC,IAAI,CAACb,IAAI,CAACT,EAAE,CAAC,CAAC9H,SAAS,CAAEqJ,MAAM,IAAG;MAC3E,IAAIC,WAAW,GAAG,IAAI,CAACN,SAAS,CAACX,IAAI,CAAC,SAAS,IAAI,CAACE,IAAI,CAACT,EAAE,UAAU,EAAE,SAAS,EAAE;QAACyB,QAAQ,EAAC;MAAI,CAAC,CAAC;MAChGjJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE8I,MAAM,CAAC;MACrC,IAAI,CAACG,SAAS,EAAE;IACpB,CAAC,CAAC;EACN;EAEAA,SAASA,CAAA;IACL,IAAI,CAACT,SAAS,CAACU,KAAK,EAAE;EAC1B;;AA/BSrH,gBAAgB;mBAAhBA,gBAAgB,EAAAtE,+DAAA,CAAAmD,kEAAA,GAAAnD,+DAAA,CAMbgJ,qEAAe,GAAAhJ,+DAAA,CAAAJ,qEAAA,GAAAI,+DAAA,CAAAkH,oEAAA;AAAA;AANlB5C,gBAAgB;QAAhBA,gBAAgB;EAAAjB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAqI,0BAAAnI,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MGxE7B3D,4DAAA,UAAK;MACqCA,oDAAA,GAA6B;MAAAA,0DAAA,EAAM;MACzEA,4DAAA,aAAwB;MACMA,oDAAA,iDAA0C;MAAAA,0DAAA,EAAI;MAE5EA,4DAAA,aAA4C;MACDA,wDAAA,mBAAA+L,kDAAA;QAAA,OAASnI,GAAA,CAAAyH,SAAA,EAAW;MAAA,EAAC;MAAErL,oDAAA,kBAAW;MAAAA,0DAAA,EAAS;MAClFA,4DAAA,gBAAuD;MAAtBA,wDAAA,mBAAAgM,kDAAA;QAAA,OAASpI,GAAA,CAAA8H,SAAA,EAAW;MAAA,EAAC;MAAC1L,oDAAA,eAAO;MAAAA,0DAAA,EAAS;;;MANrCA,uDAAA,GAA6B;MAA7BA,gEAAA,yBAAA4D,GAAA,CAAA6G,IAAA,CAAAT,EAAA,KAA6B;;;;;;AHuE1C;AAkC7B,MAKazF,cAAc;EAazB3C,YACSqJ,SAAsC,EACbR,IAAW,EACnCN,YAAyB,EAC3Be,SAAsB;IAHrB,KAAAD,SAAS,GAATA,SAAS;IACgB,KAAAR,IAAI,GAAJA,IAAI;IAC5B,KAAAN,YAAY,GAAZA,YAAY;IACd,KAAAe,SAAS,GAATA,SAAS;IAfjB;IACA,KAAApB,IAAI,GAAG,IAAIZ,qDAAS,CAAC;MACnBe,KAAK,EAAE,IAAIhB,uDAAW,CAAC,IAAI,EAACE,gEAAoB,CAAC,CAAC,CAAC,CAAC;MACpDe,WAAW,EAAE,IAAIjB,uDAAW,CAAC,IAAI,EAACE,gEAAoB,CAAC,EAAE,CAAC,CAAC;MAC3D+C,eAAe,EAAE,IAAIjD,uDAAW,CAAC,IAAI,EAACE,gEAAoB,CAAC,EAAE,CAAC,CAAC;MAC/DgD,MAAM,EAAE,IAAIlD,uDAAW,CAAC,IAAI,EAACE,+DAAmB,CAAC;MACjD;MACAkD,QAAQ,EAAE,IAAIpD,uDAAW,EAAE;MAC3Bc,QAAQ,EAAE,IAAId,uDAAW,CAAC,IAAI,EAACE,+DAAmB;KACnD,CAAC;IAcF,KAAAmD,QAAQ,GAAE,KAAK;EAPd;EASDtJ,QAAQA,CAAA;IACN;IACA;IACA;EAAA;EAGFmI,WAAWA,CAAA;IACT,IAAG,IAAI,CAACtB,UAAU,EAAC;MACjB,IAAI,CAACA,UAAU,CAACuB,WAAW,EAAE;;IAE/B,IAAG,IAAI,CAACmB,SAAS,EAAC;MAChB,IAAI,CAACA,SAAS,CAACnB,WAAW,EAAE;;EAEhC;EAEAoB,MAAMA,CAAA;IACJ,IAAI,CAACD,SAAS,GAAG,IAAI,CAACpC,YAAY,CAACsC,GAAG,CAAC,IAAI,CAAChC,IAAI,CAACT,EAAE,CAAC,CAAC0C,IAAI,CAACtD,oDAAI,CAAC,CAAC,CAAC,CAAC,CAC/DlH,SAAS,CAAEqJ,MAAM,IAAG;MACnB/I,OAAO,CAACC,GAAG,CAACkK,IAAI,CAACC,SAAS,CAACrB,MAAM,CAAC,KAAKoB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACnC,IAAI,CAAC,CAAC;MAC/D,IAAI,CAAC6B,QAAQ,GAAGK,IAAI,CAACC,SAAS,CAACrB,MAAM,CAAC,KAAKoB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACnC,IAAI,CAAC;IACtE,CAAC,CAAC;EACJ;EAGJoC,OAAOA,CAAA;IACL,OAAO,IAAI,CAAC/C,IAAI,CAACgD,KAAK,IAAI,IAAI,CAACR,QAAQ;EACzC;EAEAS,QAAQA,CAAA;IACN,IAAI,CAAClD,UAAU,GAAG,IAAI,CAACM,YAAY,CAAC6C,MAAM,CAAC,IAAI,CAACvC,IAAI,CAACT,EAAE,EAAC,IAAI,CAACS,IAAI,CAAC,CAC/DvI,SAAS,CAAEqJ,MAAM,IAAG;MACnB,IAAIC,WAAW,GAAG,IAAI,CAACN,SAAS,CAACX,IAAI,CAAC,SAAS,IAAI,CAACE,IAAI,CAACT,EAAE,UAAU,EAAE,SAAS,EAAE;QAACyB,QAAQ,EAAC;MAAI,CAAC,CAAC;MAClGjJ,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAC8I,MAAM,CAAC;IACpD,CAAC,CAAC;EACN;EAGAG,SAASA,CAAA;IACP;IACA,IAAIuB,GAAG,GAAE,IAAI;IACb;IACA,IAAG,IAAI,CAACX,QAAQ,EAAE;MAChBW,GAAG,GAAG3C,MAAM,CAAC4C,OAAO,CAAC,gEAAgE,CAAC;;IAExF,IAAGD,GAAG,EAAE;MACN,IAAI,CAAChC,SAAS,CAACU,KAAK,EAAE;;EAE1B;;AA1EWpH,cAAc;mBAAdA,cAAc,EAAAvE,+DAAA,CAAAmD,kEAAA,GAAAnD,+DAAA,CAefgJ,qEAAe,GAAAhJ,+DAAA,CAAAJ,qEAAA,GAAAI,+DAAA,CAAAkH,oEAAA;AAAA;AAfd3C,cAAc;QAAdA,cAAc;EAAAlB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAA0J,wBAAAxJ,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;ME/G3B3D,4DAAA,aAAoB;MACGA,oDAAA,oBAAa;MAAAA,0DAAA,EAAK;MACvCA,4DAAA,aAAwC;MACjBA,oDAAA,GAAqB;MAAAA,0DAAA,EAAK;MAC/CA,4DAAA,cAA6C;MAApBA,wDAAA,oBAAAoN,+CAAA;QAAA,OAAUxJ,GAAA,CAAA4I,MAAA,EAAQ;MAAA,EAAC;MAC1CxM,4DAAA,UAAK;MACQA,oDAAA,eAAQ;MAAAA,0DAAA,EAAY;MAC/BA,4DAAA,0BAAwF;MAA9CA,wDAAA,2BAAAqN,kEAAAjM,MAAA;QAAA,OAAAwC,GAAA,CAAA6G,IAAA,CAAA0B,MAAA,GAAA/K,MAAA;MAAA,EAAyB,oBAAAkM,2DAAA;QAAA,OAAW1J,GAAA,CAAA4I,MAAA,EAAQ;MAAA,EAAnB;MACjExM,4DAAA,2BAAgD;MAAAA,oDAAA,aAAK;MAAAA,0DAAA,EAAmB;MACxEA,4DAAA,2BAAgD;MAAAA,oDAAA,aAAK;MAAAA,0DAAA,EAAmB;MACxEA,4DAAA,2BAA+C;MAAAA,oDAAA,YAAI;MAAAA,0DAAA,EAAmB;MAG1EA,4DAAA,cAAwB;MACXA,oDAAA,eAAO;MAAAA,0DAAA,EAAY;MAC9BA,4DAAA,sBAAgB;MACEA,wDAAA,2BAAAuN,wDAAAnM,MAAA;QAAA,OAAAwC,GAAA,CAAA6G,IAAA,CAAAR,KAAA,GAAA7I,MAAA;MAAA,EAAwB;MAAxCpB,0DAAA,EAAoH;MACpHA,4DAAA,gBAAU;MAAAA,oDAAA,IAA+B;MAAAA,0DAAA,EAAW;MACpDA,4DAAA,iBAAW;MAACA,oDAAA,IAA2D;MAAAA,0DAAA,EAAY;MAGrFA,4DAAA,iBAAW;MAAAA,oDAAA,qBAAa;MAAAA,0DAAA,EAAY;MACpCA,4DAAA,sBAAgB;MACKA,wDAAA,2BAAAwN,2DAAApM,MAAA;QAAA,OAAAwC,GAAA,CAAA6G,IAAA,CAAAP,WAAA,GAAA9I,MAAA;MAAA,EAA8B;MAA8FpB,0DAAA,EAAW;MAC1JA,4DAAA,gBAAU;MAAAA,oDAAA,IAAqC;MAAAA,0DAAA,EAAW;MAC1DA,4DAAA,iBAAW;MAACA,oDAAA,IAAkE;MAAAA,0DAAA,EAAY;MAG5FA,4DAAA,iBAAW;MAAAA,oDAAA,0BAAkB;MAAAA,0DAAA,EAAY;MACzCA,4DAAA,sBAAgB;MACKA,wDAAA,2BAAAyN,2DAAArM,MAAA;QAAA,OAAAwC,GAAA,CAAA6G,IAAA,CAAAyB,eAAA,GAAA9K,MAAA;MAAA,EAAkC;MAA4GpB,0DAAA,EAAW;MAC5KA,4DAAA,gBAAU;MAAAA,oDAAA,IAA0C;MAAAA,0DAAA,EAAW;MAC/DA,4DAAA,iBAAW;MAACA,oDAAA,IAAsE;MAAAA,0DAAA,EAAY;MAGhGA,4DAAA,iBAAW;MAAAA,oDAAA,kBAAU;MAAAA,0DAAA,EAAY;MACjCA,4DAAA,sBAAgB;MACqBA,wDAAA,2BAAA0N,6DAAAtM,MAAA;QAAA,OAAAwC,GAAA,CAAA6G,IAAA,CAAAV,QAAA,GAAA3I,MAAA;MAAA,EAA2B,6BAAAuM,+DAAA;QAAA,OAA+C/J,GAAA,CAAA4I,MAAA,EAAQ;MAAA,EAAvD;MAC5DxM,4DAAA,sBAAyB;MAAAA,oDAAA,YAAI;MAAAA,0DAAA,EAAa;MAC1CA,4DAAA,sBAA2B;MAAAA,oDAAA,cAAM;MAAAA,0DAAA,EAAa;MAC9CA,4DAAA,sBAAwB;MAAAA,oDAAA,WAAG;MAAAA,0DAAA,EAAa;MAE1CA,4DAAA,iBAAW;MAACA,oDAAA,4BAAmB;MAAAA,0DAAA,EAAY;MAG7CA,4DAAA,eAAuB;MACZA,oDAAA,oBAAY;MAAAA,0DAAA,EAAY;MACjCA,4DAAA,YAAM;MAAAA,oDAAA,IAAgD;;MAAAA,0DAAA,EAAO;MAG/DA,4DAAA,eAAuB;MACZA,oDAAA,yBAAiB;MAAAA,0DAAA,EAAY;MACxCA,4DAAA,YAAM;MAAAA,oDAAA,IAAgD;;MAAAA,0DAAA,EAAO;MAKjEA,4DAAA,eAA4C;MACpBA,wDAAA,mBAAA4N,iDAAA;QAAA,OAAShK,GAAA,CAAAmJ,QAAA,EAAU;MAAA,EAAC;MAA8E/M,oDAAA,iBAAS;MAAAA,0DAAA,EAAS;MAC1IA,wDAAA,KAAA6N,oCAAA,wBAAoD;MACpD7N,4DAAA,kBAAwD;MAAvBA,wDAAA,mBAAA8N,iDAAA;QAAA,OAASlK,GAAA,CAAA8H,SAAA,EAAW;MAAA,EAAC;MAAE1L,oDAAA,eAAO;MAAAA,0DAAA,EAAS;;;;;;MAzDrDA,uDAAA,GAAqB;MAArBA,gEAAA,iBAAA4D,GAAA,CAAA6G,IAAA,CAAAT,EAAA,KAAqB;MACpChK,uDAAA,GAAkB;MAAlBA,wDAAA,cAAA4D,GAAA,CAAAkG,IAAA,CAAkB;MAGsB9J,uDAAA,GAAyB;MAAzBA,wDAAA,YAAA4D,GAAA,CAAA6G,IAAA,CAAA0B,MAAA,CAAyB;MASjDnM,uDAAA,IAAwB;MAAxBA,wDAAA,YAAA4D,GAAA,CAAA6G,IAAA,CAAAR,KAAA,CAAwB;MAC9BjK,uDAAA,GAA+B;MAA/BA,gEAAA,MAAA0I,GAAA,CAAAqF,KAAA,kBAAArF,GAAA,CAAAqF,KAAA,CAAAC,MAAA,cAA+B;MAC7BhO,uDAAA,GAA2D;MAA3DA,gEAAA,mCAAA0I,GAAA,CAAAqF,KAAA,kBAAArF,GAAA,CAAAqF,KAAA,CAAAC,MAAA,cAA2D;MAKpDhO,uDAAA,GAA8B;MAA9BA,wDAAA,YAAA4D,GAAA,CAAA6G,IAAA,CAAAP,WAAA,CAA8B;MACvClK,uDAAA,GAAqC;MAArCA,gEAAA,MAAAM,GAAA,CAAAyN,KAAA,kBAAAzN,GAAA,CAAAyN,KAAA,CAAAC,MAAA,cAAqC;MACnChO,uDAAA,GAAkE;MAAlEA,gEAAA,mCAAAM,GAAA,CAAAyN,KAAA,kBAAAzN,GAAA,CAAAyN,KAAA,CAAAC,MAAA,eAAkE;MAK3DhO,uDAAA,GAAkC;MAAlCA,wDAAA,YAAA4D,GAAA,CAAA6G,IAAA,CAAAyB,eAAA,CAAkC;MAC3ClM,uDAAA,GAA0C;MAA1CA,gEAAA,MAAAiO,GAAA,CAAAF,KAAA,kBAAAE,GAAA,CAAAF,KAAA,CAAAC,MAAA,eAA0C;MACxChO,uDAAA,GAAsE;MAAtEA,gEAAA,mCAAAiO,GAAA,CAAAF,KAAA,kBAAAE,GAAA,CAAAF,KAAA,CAAAC,MAAA,eAAsE;MAK/ChO,uDAAA,GAA2B;MAA3BA,wDAAA,YAAA4D,GAAA,CAAA6G,IAAA,CAAAV,QAAA,CAA2B;MAUxD/J,uDAAA,IAAgD;MAAhDA,+DAAA,CAAAA,yDAAA,SAAA4D,GAAA,CAAA6G,IAAA,CAAA0D,SAAA,4BAAgD;MAKlDnO,uDAAA,GAAgD;MAAhDA,+DAAA,CAAAA,yDAAA,SAAA4D,GAAA,CAAA6G,IAAA,CAAA2D,SAAA,4BAAgD;MAMbpO,uDAAA,GAAuB;MAAvBA,wDAAA,cAAA4D,GAAA,CAAAiJ,OAAA,GAAuB,qBAAAjJ,GAAA,CAAAkG,IAAA;MACtD9J,uDAAA,GAAe;MAAfA,wDAAA,UAAA4D,GAAA,CAAA0I,QAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExDqC;AACY;AACH;;;;;;;;;;;;;;;ICa/DtM,4DAAA,YAA8D;IAAAA,oDAAA,iBAAU;IAAAA,0DAAA,EAAI;;;;;IAG1EA,4DAAA,cAAuE;IACrEA,4DAAA,EAA0D;IAA1DA,4DAAA,cAA0D;IACxDA,uDAAA,eAA2H;IAE7HA,0DAAA,EAAM;;;;;;IANVA,4DAAA,cAAgF;IAAzCA,wDAAA,4BAAAuO,qEAAAnN,MAAA;MAAA,MAAAoN,WAAA,GAAAxO,2DAAA,CAAAyO,IAAA;MAAA,MAAAC,OAAA,GAAAF,WAAA,CAAAG,SAAA;MAAA,MAAAC,OAAA,GAAA5O,2DAAA;MAAA,OAAkBA,yDAAA,CAAA4O,OAAA,CAAAC,QAAA,CAAAzN,MAAA,EAAAsN,OAAA,CAAqB;IAAA,EAAC;IAC3E1O,4DAAA,oBAAsE;IAAhCA,wDAAA,0BAAA8O,yEAAA;MAAA9O,2DAAA,CAAAyO,IAAA;MAAA,MAAAM,OAAA,GAAA/O,2DAAA;MAAA,OAAgBA,yDAAA,CAAA+O,OAAA,CAAA1E,YAAA,EAAc;IAAA,EAAC;IAACrK,0DAAA,EAAY;IACpFA,wDAAA,IAAAgP,4CAAA,kBAKM;IACRhP,0DAAA,EAAM;;;;;IAPsBA,uDAAA,GAAa;IAAbA,wDAAA,SAAA0O,OAAA,CAAa;IACjC1O,uDAAA,GAA6B;IAA7BA,wDAAA,SAAAiP,MAAA,CAAA3E,MAAA,CAAA4E,UAAA,OAA6B;;;;;IAwBrClP,4DAAA,YAAoE;IAAAA,oDAAA,iBAAU;IAAAA,0DAAA,EAAI;;;;;IAGhFA,4DAAA,cAAuE;IACrEA,4DAAA,EAA0D;IAA1DA,4DAAA,cAA0D;IACxDA,uDAAA,eAA2H;IAE7HA,0DAAA,EAAM;;;;;;IANVA,4DAAA,cAAsF;IAAzCA,wDAAA,4BAAAmP,qEAAA/N,MAAA;MAAA,MAAAoN,WAAA,GAAAxO,2DAAA,CAAAoP,IAAA;MAAA,MAAAC,QAAA,GAAAb,WAAA,CAAAG,SAAA;MAAA,MAAAW,OAAA,GAAAtP,2DAAA;MAAA,OAAkBA,yDAAA,CAAAsP,OAAA,CAAAT,QAAA,CAAAzN,MAAA,EAAAiO,QAAA,CAAqB;IAAA,EAAC;IACjFrP,4DAAA,oBAAsE;IAAhCA,wDAAA,0BAAAuP,yEAAA;MAAAvP,2DAAA,CAAAoP,IAAA;MAAA,MAAAI,OAAA,GAAAxP,2DAAA;MAAA,OAAgBA,yDAAA,CAAAwP,OAAA,CAAAnF,YAAA,EAAc;IAAA,EAAC;IAACrK,0DAAA,EAAY;IACpFA,wDAAA,IAAAyP,4CAAA,kBAKM;IACRzP,0DAAA,EAAM;;;;;IAPsBA,uDAAA,GAAa;IAAbA,wDAAA,SAAAqP,QAAA,CAAa;IACjCrP,uDAAA,GAA6B;IAA7BA,wDAAA,SAAAyJ,MAAA,CAAAa,MAAA,CAAA4E,UAAA,OAA6B;;;;;IA4BrClP,4DAAA,YAA8D;IAAAA,oDAAA,iBAAU;IAAAA,0DAAA,EAAI;;;;;IAK1EA,4DAAA,cAAuE;IACrEA,4DAAA,EAA0D;IAA1DA,4DAAA,cAA0D;IACxDA,uDAAA,eAA2H;IAE7HA,0DAAA,EAAM;;;;;;IARVA,4DAAA,cAA6F;IAAzCA,wDAAA,4BAAA0P,qEAAAtO,MAAA;MAAA,MAAAoN,WAAA,GAAAxO,2DAAA,CAAA2P,IAAA;MAAA,MAAAC,QAAA,GAAApB,WAAA,CAAAG,SAAA;MAAA,MAAAkB,OAAA,GAAA7P,2DAAA;MAAA,OAAkBA,yDAAA,CAAA6P,OAAA,CAAAhB,QAAA,CAAAzN,MAAA,EAAAwO,QAAA,CAAqB;IAAA,EAAC;IAExF5P,4DAAA,oBAAsE;IAAhCA,wDAAA,0BAAA8P,yEAAA;MAAA9P,2DAAA,CAAA2P,IAAA;MAAA,MAAAI,OAAA,GAAA/P,2DAAA;MAAA,OAAgBA,yDAAA,CAAA+P,OAAA,CAAA1F,YAAA,EAAc;IAAA,EAAC;IAACrK,0DAAA,EAAY;IAEpFA,wDAAA,IAAAgQ,4CAAA,kBAKM;IAERhQ,0DAAA,EAAM;;;;;IATsBA,uDAAA,GAAa;IAAbA,wDAAA,SAAA4P,QAAA,CAAa;IAEjC5P,uDAAA,GAA6B;IAA7BA,wDAAA,SAAAsB,MAAA,CAAAgJ,MAAA,CAAA4E,UAAA,OAA6B;;;;;;;;;;;;;ADnErD,MAKalQ,sBAAsB;EAkBjCiR,eAAeA,CAAC9N,CAAY;IAC1BK,OAAO,CAACC,GAAG,CAACN,CAAC,CAAC+N,SAAS,CAAC;IACxB,IAAI,CAACC,KAAK,GAAGhO,CAAC,CAACiO,QAAQ;IACvB,IAAI,CAACC,KAAK,GAAGlO,CAAC,CAAC+N,SAAS;IACxB,IAAI,CAACI,WAAW,EAAE;EACpB;EAKA1O,YAAoBuI,YAAyB,EAAQC,MAAiB,EAASmG,KAAqB,EAASrF,SAAsB;IAA/G,KAAAf,YAAY,GAAZA,YAAY;IAAqB,KAAAC,MAAM,GAANA,MAAM;IAAoB,KAAAmG,KAAK,GAALA,KAAK;IAAyB,KAAArF,SAAS,GAATA,SAAS;IAzBtH,KAAAsF,IAAI,GAAa,EAAE;IACnB,KAAAC,UAAU,GAAY,EAAE;IACxB,KAAAC,IAAI,GAAY,EAAE;IAElB,KAAAC,QAAQ,GAAY,EAAE;IAEtB,KAAAR,KAAK,GAAW,CAAC;IACjB,KAAAE,KAAK,GAAW,CAAC;IAgBjB,KAAAO,SAAS,GAAW,IAAI;IAwFL,KAAAtG,MAAM,GAAGA,MAAM;IACf,KAAAuG,WAAW,GAAGA,WAAW;IAtF1C,IAAI,CAACP,WAAW,EAAE;EACpB;EAEAtN,QAAQA,CAAA;IACN,IAAI,CAACuN,KAAK,CAACO,MAAM,CAAC5O,SAAS,CAAC4O,MAAM,IAAG;MACnC,IAAI,CAACzE,QAAQ,GAAGyE,MAAM,CAAC,UAAU,CAAC;MAClCtO,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC4J,QAAQ,CAAC;IAC5B,CAAC,CAAC;IACF,IAAI,CAACiE,WAAW,EAAE;EACpB;EAEAS,WAAWA,CAAA;IACT,IAAI,CAACH,SAAS,GAAG,KAAK;EACxB;EAEAN,WAAWA,CAAA;IACT,IAAI,CAACU,QAAQ,GAAG,IAAI,CAAC7G,YAAY,CAAC8G,MAAM,EAAE,CACrC/O,SAAS,CAACuI,IAAI,IAAG;MAChB,IAAI,CAACkG,QAAQ,GAAGlG,IAAI,CAACyG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAC9E,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC;MAC7D7J,OAAO,CAACC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC+N,IAAI,CAACxC,MAAM,CAAC;MACpCxL,OAAO,CAACC,GAAG,CAAC,YAAY,EAAC,IAAI,CAACgO,UAAU,CAACzC,MAAM,CAAC;MAChDxL,OAAO,CAACC,GAAG,CAAC,MAAM,EAAC,IAAI,CAACiO,IAAI,CAAC;MAC7B,IAAI,CAACF,IAAI,GAAG/F,IAAI,CAACyG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAChF,MAAM,IAAI,OAAO,IAAIgF,CAAC,CAAC9E,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC;MAChF,IAAI,CAACoE,UAAU,GAAGhG,IAAI,CAACyG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAChF,MAAM,IAAI,OAAO,IAAIgF,CAAC,CAAC9E,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC;MACtF,IAAI,CAACqE,IAAI,GAAGjG,IAAI,CAACyG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAChF,MAAM,IAAI,MAAM,IAAIgF,CAAC,CAAC9E,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC;MAE/E,IAAI,CAACmE,IAAI,GAAG/F,IAAI,CAACyG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAChF,MAAM,IAAI,OAAO,IAAIgF,CAAC,CAAC9E,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC,CAAChE,KAAK,CAAC,IAAI,CAAC8H,KAAK,IAAI,CAAC,GAAI,IAAI,CAACK,IAAI,CAACxC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACqC,KAAK,GAAK,IAAI,CAACG,IAAI,CAACxC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACqC,KAAK,GAAG,CAAE,EAAE,IAAI,CAACF,KAAK,KAAK,CAAC,GAAG,IAAI,CAACK,IAAI,CAACxC,MAAM,GAAG,IAAI,CAACqC,KAAK,GAAI,IAAI,CAACG,IAAI,CAACxC,MAAM,GAAG,IAAI,CAACqC,KAAK,GAAG,CAAC,CAAC;MAClS,IAAI,CAACI,UAAU,GAAGhG,IAAI,CAACyG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAChF,MAAM,IAAI,OAAO,IAAIgF,CAAC,CAAC9E,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC,CAAChE,KAAK,CAAC,IAAI,CAAC8H,KAAK,KAAK,CAAC,GAAI,IAAI,CAACM,UAAU,CAACzC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACqC,KAAK,GAAK,IAAI,CAACI,UAAU,CAACzC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACqC,KAAK,GAAG,CAAE,EAAE,IAAI,CAACF,KAAK,KAAK,CAAC,GAAG,IAAI,CAACM,UAAU,CAACzC,MAAM,GAAG,IAAI,CAACqC,KAAK,GAAI,IAAI,CAACI,UAAU,CAACzC,MAAM,GAAG,IAAI,CAACqC,KAAK,GAAG,CAAC,CAAC;MACjU,IAAI,CAACK,IAAI,GAAGjG,IAAI,CAACyG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAChF,MAAM,IAAI,MAAM,IAAIgF,CAAC,CAAC9E,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC,CAAChE,KAAK,CAAC,IAAI,CAAC8H,KAAK,KAAK,CAAC,GAAI,IAAI,CAACO,IAAI,CAAC1C,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACqC,KAAK,GAAM,IAAI,CAACK,IAAI,CAAC1C,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACqC,KAAK,GAAG,CAAE,EAAE,IAAI,CAACF,KAAK,KAAK,CAAC,GAAG,IAAI,CAACO,IAAI,CAAC1C,MAAM,GAAG,IAAI,CAACqC,KAAK,GAAI,IAAI,CAACK,IAAI,CAAC1C,MAAM,GAAG,IAAI,CAACqC,KAAK,GAAG,CAAC,CAAC;IAErS,CAAC,CAAC;EACR;EAEAlF,WAAWA,CAAA;IACT,IAAG,IAAI,CAAC6F,QAAQ,EAAC;MACf,IAAI,CAACA,QAAQ,CAAC5F,WAAW,EAAE;;IAE7B,IAAG,IAAI,CAACH,SAAS,EAAC;MAChB,IAAI,CAACA,SAAS,CAACG,WAAW,EAAE;;IAE9B,IAAG,IAAI,CAACgG,GAAG,EAAC;MACV,IAAI,CAACnG,SAAS,CAACG,WAAW,EAAE;;EAEhC;EAEAyD,QAAQA,CAACwC,KAA2B,EAAEvH,IAAW;IAC/CtH,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAE4O,KAAK,CAACC,iBAAiB,CAACtH,EAAE,CAAC;IAC5DxH,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAE4O,KAAK,CAACE,SAAS,CAACvH,EAAE,CAAC;IAClD,IAAIqH,KAAK,CAACC,iBAAiB,KAAKD,KAAK,CAACE,SAAS,EAAE;MAC/C,IAAI/F,WAAW,GAAG,IAAI,CAACN,SAAS,CAACX,IAAI,CAAC,SAAST,IAAI,CAACE,EAAE,UAAU,EAAE,SAAS,EAAE;QAACyB,QAAQ,EAAC;MAAI,CAAC,CAAC;MAE7F,IAAI,CAAC2F,GAAG,GAAG,IAAI,CAACjH,YAAY,CAAC6C,MAAM,CAAClD,IAAI,CAACE,EAAE,EAAC,aAAa,GAAEqH,KAAK,CAACE,SAAS,CAACvH,EAAE,GAAC,IAAI,CAAC,CAC9E9H,SAAS,CAAC,MAAK;QAAI,IAAI,CAACoO,WAAW,EAAE;MAAC,CAAC,CAAC;;EAGjD;EAEAjG,YAAYA,CAAA;IACV,IAAI,CAACiG,WAAW,EAAE;EACpB;EAEAkB,IAAIA,CAACH,KAA2B;IAC9B,IAAIA,KAAK,CAACC,iBAAiB,KAAKD,KAAK,CAACE,SAAS,EAAE;MAC/C;;IAEF,IAAI,CAACF,KAAK,CAACE,SAAS,CAAC9G,IAAI,IAAI,CAAC4G,KAAK,CAACC,iBAAiB,CAAC7G,IAAI,EAAE;MAC1D;;IAEF4D,yEAAiB,CACbgD,KAAK,CAACC,iBAAiB,CAAC7G,IAAI,EAC5B4G,KAAK,CAACE,SAAS,CAAC9G,IAAI,EACpB4G,KAAK,CAACI,aAAa,EACnBJ,KAAK,CAACK,YAAY,CACrB;IACD,IAAI,CAACd,SAAS,GAAG,IAAI;EACvB;EAEAe,UAAUA,CAAA;IACR,IAAI,CAAC1G,SAAS,GAAG,IAAI,CAACb,MAAM,CAACG,IAAI,CAACjF,aAAa,EAAE;MAC/CmF,IAAI,EAAE;QAAC4B,QAAQ,EAAE,IAAI,CAACA;MAAQ,CAAC;MAC/B7B,YAAY,EAAC;KACZ,CAAC,CACCE,WAAW,EAAE,CAACxI,SAAS,CAAC,MAAI;MAAC,IAAI,CAACoO,WAAW,EAAE;IAAC,CAAC,CAAC;EACzD;;AAhHWtR,sBAAsB;mBAAtBA,sBAAsB,EAAAgB,+DAAA,CAAAJ,qEAAA,GAAAI,+DAAA,CAAAmD,+DAAA,GAAAnD,+DAAA,CAAA6G,2DAAA,GAAA7G,+DAAA,CAAA8G,oEAAA;AAAA;AAAtB9H,sBAAsB;QAAtBA,sBAAsB;EAAAqE,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAoO,gCAAAlO,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCnBnC3D,4DAAA,gBAAsD;MAAvBA,wDAAA,mBAAA8R,wDAAA;QAAA,OAASlO,GAAA,CAAA+N,UAAA,EAAY;MAAA,EAAC;MAAE3R,4DAAA,eAAU;MAAAA,oDAAA,UAAG;MAAAA,0DAAA,EAAW;MAACA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAS;MAGjGA,4DAAA,aAAuB;MAKsCA,oDAAA,YAAK;MAAAA,0DAAA,EAAM;MAC5DA,4DAAA,qBAQqB;MAFbA,wDAAA,gCAAA+R,uEAAA3Q,MAAA;QAAA,OAAsBwC,GAAA,CAAA4N,IAAA,CAAApQ,MAAA,CAAY;MAAA,EAAC,gCAAA4Q,uEAAA;QAAA,OACbpO,GAAA,CAAAmN,WAAA,EAAa;MAAA,EADA;MAGvC/Q,wDAAA,KAAAiS,oCAAA,eAA4E;MAC5EjS,wDAAA,KAAAkS,sCAAA,iBAQM;MACVlS,0DAAA,EAAW;MAIfA,uDAAA,cAAsB;MAEtBA,4DAAA,cAA6B;MACuBA,oDAAA,aAAK;MAAAA,0DAAA,EAAM;MAC3DA,4DAAA,wBAQqB;MAFbA,wDAAA,gCAAAmS,wEAAA/Q,MAAA;QAAA,OAAsBwC,GAAA,CAAA4N,IAAA,CAAApQ,MAAA,CAAY;MAAA,EAAC,gCAAAgR,wEAAA;QAAA,OACbxO,GAAA,CAAAmN,WAAA,EAAa;MAAA,EADA;MAGvC/Q,wDAAA,KAAAqS,oCAAA,eAAkF;MAClFrS,wDAAA,KAAAsS,sCAAA,iBAQM;MACVtS,0DAAA,EAAW;MAMfA,uDAAA,cAAsB;MAEtBA,4DAAA,cAA6B;MACuBA,oDAAA,YAAI;MAAAA,0DAAA,EAAM;MAC1DA,4DAAA,wBASqB;MAFbA,wDAAA,gCAAAuS,wEAAAnR,MAAA;QAAA,OAAsBwC,GAAA,CAAA4N,IAAA,CAAApQ,MAAA,CAAY;MAAA,EAAC,gCAAAoR,wEAAA;QAAA,OACb5O,GAAA,CAAAmN,WAAA,EAAa;MAAA,EADA;MAIvC/Q,wDAAA,KAAAyS,oCAAA,eAA4E;MAC5EzS,wDAAA,KAAA0S,sCAAA,kBAWM;MACV1S,0DAAA,EAAW;MAWvBA,4DAAA,yBAIwC;MAHzBA,wDAAA,kBAAA2S,+DAAAvR,MAAA;QAAA,OAAQwC,GAAA,CAAAqM,eAAA,CAAA7O,MAAA,CAAuB;MAAA,EAAC;MAI/CpB,0DAAA,EAAgB;;;;;;MAjGCA,uDAAA,GAA0C;MAA1CA,wDAAA,YAAAA,6DAAA,KAAA6S,GAAA,EAA0C;MAKvC7S,uDAAA,GAAwB;MAAxBA,wDAAA,oBAAA4D,GAAA,CAAA4M,IAAA,CAAwB,2BAAAxQ,6DAAA,KAAA+S,GAAA,EAAAtK,GAAA,EAAAuK,GAAA;MAKJhT,uDAAA,GAAoC;MAApCA,wDAAA,SAAA4D,GAAA,CAAA4M,IAAA,CAAAxC,MAAA,UAAApK,GAAA,CAAAgN,SAAA,CAAoC;MACtC5Q,uDAAA,GAAO;MAAPA,wDAAA,YAAA4D,GAAA,CAAA4M,IAAA,CAAO;MAgB5BxQ,uDAAA,GAA0C;MAA1CA,wDAAA,YAAAA,6DAAA,KAAA6S,GAAA,EAA0C;MAKvC7S,uDAAA,GAA8B;MAA9BA,wDAAA,oBAAA4D,GAAA,CAAA6M,UAAA,CAA8B,2BAAAzQ,6DAAA,KAAA+S,GAAA,EAAArK,GAAA,EAAAD,GAAA;MAKVzI,uDAAA,GAA0C;MAA1CA,wDAAA,SAAA4D,GAAA,CAAA6M,UAAA,CAAAzC,MAAA,UAAApK,GAAA,CAAAgN,SAAA,CAA0C;MAC5C5Q,uDAAA,GAAa;MAAbA,wDAAA,YAAA4D,GAAA,CAAA6M,UAAA,CAAa;MAkBlCzQ,uDAAA,GAA0C;MAA1CA,wDAAA,YAAAA,6DAAA,KAAA6S,GAAA,EAA0C;MAMvC7S,uDAAA,GAAwB;MAAxBA,wDAAA,oBAAA4D,GAAA,CAAA8M,IAAA,CAAwB,2BAAA1Q,6DAAA,KAAA+S,GAAA,EAAArK,GAAA,EAAAsK,GAAA;MAMJhT,uDAAA,GAAoC;MAApCA,wDAAA,SAAA4D,GAAA,CAAA8M,IAAA,CAAA1C,MAAA,UAAApK,GAAA,CAAAgN,SAAA,CAAoC;MACzB5Q,uDAAA,GAAO;MAAPA,wDAAA,YAAA4D,GAAA,CAAA8M,IAAA,CAAO;MAuBzB1Q,uDAAA,GAA0B;MAA1BA,wDAAA,WAAA4D,GAAA,CAAA+M,QAAA,CAAA3C,MAAA,CAA0B,mCAAAhO,6DAAA,KAAAiT,GAAA;;;;;ADjFxB;AAsHnC,MAKa3N,aAAa;EAatB1D,YACSqJ,SAAsC,EACbR,IAAS,EACjCN,YAAyB,EACzBe,SAAsB;IAHvB,KAAAD,SAAS,GAATA,SAAS;IACgB,KAAAR,IAAI,GAAJA,IAAI;IAC5B,KAAAN,YAAY,GAAZA,YAAY;IACZ,KAAAe,SAAS,GAATA,SAAS;IAfrB;IACA,KAAApB,IAAI,GAAG,IAAIZ,qDAAS,CAAC;MACnBe,KAAK,EAAE,IAAIhB,uDAAW,CAAC,IAAI,EAACE,gEAAoB,CAAC,CAAC,CAAC,CAAC;MACpDe,WAAW,EAAE,IAAIjB,uDAAW,CAAC,IAAI,EAACE,gEAAoB,CAAC,EAAE,CAAC,CAAC;MAC3D+C,eAAe,EAAE,IAAIjD,uDAAW,CAAC,IAAI,EAACE,gEAAoB,CAAC,EAAE,CAAC,CAAC;MAC/DgD,MAAM,EAAE,IAAIlD,uDAAW,CAAC,OAAO,EAACE,+DAAmB,CAAC;MACpDY,QAAQ,EAAE,IAAId,uDAAW,CAAC,IAAI,EAACE,+DAAmB,CAAC;MACnD;MACAkD,QAAQ,EAAE,IAAIpD,uDAAW,CAAC,IAAI,CAACwB,IAAI,CAAC4B,QAAQ;KAC7C,CAAC;EAOD;EAODrJ,QAAQA,CAAA;IACN;IACAR,OAAO,CAACC,GAAG,CAAC,IAAI,CAACgI,IAAI,CAAC4B,QAAQ,CAAC;IAC/B,IAAI,CAAC6G,SAAS,GAAG,IAAI,CAAC/I,YAAY,CAACgJ,UAAU,CAAC,gBAAgB,IAAI,CAAC1I,IAAI,CAAC4B,QAAQ,IAAI,CAAC,CAChFnK,SAAS,CAACiP,CAAC,IAAI,IAAI,CAACiC,QAAQ,GAAGjC,CAAC,CAACnD,MAAM,GAAC,CAAC,CAAC;EACjD;EAGA7C,WAAWA,CAAA;IACT,IAAG,IAAI,CAAC+H,SAAS,EAAC;MAChB,IAAI,CAACA,SAAS,CAAC9H,WAAW,EAAE;;IAE9B,IAAG,IAAI,CAACiI,UAAU,EAAC;MACjB,IAAI,CAACA,UAAU,CAACjI,WAAW,EAAE;;EAEjC;EAEAyB,OAAOA,CAAA;IACL,OAAO,IAAI,CAAC/C,IAAI,CAACgD,KAAK;EACxB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACsG,UAAU,GAAG,IAAI,CAAClJ,YAAY,CAACmJ,MAAM,CAAC,IAAI,CAACxJ,IAAI,CAACiE,KAAK,CAAC,CACtD7L,SAAS,CAAEqJ,MAAM,IAAG;MACnB,IAAIC,WAAW,GAAG,IAAI,CAACN,SAAS,CAACX,IAAI,CAAC,SAASgB,MAAM,CAACvB,EAAE,UAAU,EAAE,SAAS,EAAE;QAACyB,QAAQ,EAAC;MAAI,CAAC,CAAC;MAC/FjJ,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAC8I,MAAM,CAAC;IACpD,CAAC,CAAC;EACR;EAEAG,SAASA,CAAA;IACP;IACA,IAAIuB,GAAG,GAAG3C,MAAM,CAAC4C,OAAO,CAAC,gEAAgE,CAAC;IAC1F,IAAGD,GAAG,EAAE;MACN,IAAI,CAAChC,SAAS,CAACU,KAAK,EAAE;;EAE1B;;AA5DWrG,aAAa;mBAAbA,aAAa,EAAAtF,+DAAA,CAAAmD,kEAAA,GAAAnD,+DAAA,CAeZgJ,qEAAe,GAAAhJ,+DAAA,CAAAJ,qEAAA,GAAAI,+DAAA,CAAA8G,oEAAA;AAAA;AAfhBxB,aAAa;QAAbA,aAAa;EAAAjC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAA8P,uBAAA5P,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;ME9I1B3D,4DAAA,aAAoB;MACKA,oDAAA,oBAAa;MAAAA,0DAAA,EAAK;MACvCA,4DAAA,aAAwB;MACAA,oDAAA,GAA+B;MAAAA,0DAAA,EAAK;MACxDA,4DAAA,cAAyB;MAEVA,oDAAA,eAAQ;MAAAA,0DAAA,EAAQ;MACvBA,4DAAA,0BAA0C;MACUA,oDAAA,aAAK;MAAAA,0DAAA,EAAmB;MACxEA,4DAAA,2BAAgD;MAAAA,oDAAA,aAAK;MAAAA,0DAAA,EAAmB;MACxEA,4DAAA,2BAA+C;MAAAA,oDAAA,YAAI;MAAAA,0DAAA,EAAmB;MAGlFA,4DAAA,cAAwB;MAEpBA,uDAAA,qBAA2F;MAC3FA,4DAAA,gBAAU;MAAAA,oDAAA,IAA+B;MAAAA,0DAAA,EAAW;MACpDA,4DAAA,iBAAW;MAACA,oDAAA,IAA2D;MAAAA,0DAAA,EAAY;MAGrFA,4DAAA,sBAAgB;MACdA,uDAAA,wBAA2H;MAC3HA,4DAAA,gBAAU;MAAAA,oDAAA,IAAqC;MAAAA,0DAAA,EAAW;MAC1DA,4DAAA,iBAAW;MAACA,oDAAA,IAAkE;MAAAA,0DAAA,EAAY;MAG5FA,4DAAA,sBAAgB;MACdA,uDAAA,wBAAwI;MACxIA,4DAAA,gBAAU;MAAAA,oDAAA,IAAyC;MAAAA,0DAAA,EAAW;MAC9DA,4DAAA,iBAAW;MAACA,oDAAA,IAAqE;MAAAA,0DAAA,EAAY;MAG7FA,4DAAA,sBAAgB;MAEiBA,oDAAA,YAAI;MAAAA,0DAAA,EAAa;MAC1CA,4DAAA,sBAA2B;MAAAA,oDAAA,cAAM;MAAAA,0DAAA,EAAa;MAC9CA,4DAAA,sBAAwB;MAAAA,oDAAA,WAAG;MAAAA,0DAAA,EAAa;MAE5CA,4DAAA,iBAAW;MAACA,oDAAA,4BAAmB;MAAAA,0DAAA,EAAY;MAKvDA,4DAAA,eAA4C;MAClBA,wDAAA,mBAAAwT,gDAAA;QAAA,OAAS5P,GAAA,CAAAmJ,QAAA,EAAU;MAAA,EAAC;MAA8E/M,oDAAA,gBAAQ;MAAAA,0DAAA,EAAS;MACzIA,4DAAA,kBAAwD;MAAvBA,wDAAA,mBAAAyT,gDAAA;QAAA,OAAS7P,GAAA,CAAA8H,SAAA,EAAW;MAAA,EAAC;MAAE1L,oDAAA,eAAO;MAAAA,0DAAA,EAAS;;;;;;MA1CpDA,uDAAA,GAA+B;MAA/BA,gEAAA,yBAAA4D,GAAA,CAAAwP,QAAA,KAA+B;MAC7CpT,uDAAA,GAAkB;MAAlBA,wDAAA,cAAA4D,GAAA,CAAAkG,IAAA,CAAkB;MAYV9J,uDAAA,IAA+B;MAA/BA,gEAAA,MAAA0I,GAAA,CAAAqF,KAAA,kBAAArF,GAAA,CAAAqF,KAAA,CAAAC,MAAA,cAA+B;MAC7BhO,uDAAA,GAA2D;MAA3DA,gEAAA,mCAAA0I,GAAA,CAAAqF,KAAA,kBAAArF,GAAA,CAAAqF,KAAA,CAAAC,MAAA,cAA2D;MAK7DhO,uDAAA,GAAqC;MAArCA,gEAAA,MAAAM,GAAA,CAAAyN,KAAA,kBAAAzN,GAAA,CAAAyN,KAAA,CAAAC,MAAA,cAAqC;MACnChO,uDAAA,GAAkE;MAAlEA,gEAAA,mCAAAM,GAAA,CAAAyN,KAAA,kBAAAzN,GAAA,CAAAyN,KAAA,CAAAC,MAAA,eAAkE;MAKpEhO,uDAAA,GAAyC;MAAzCA,gEAAA,MAAAiO,GAAA,CAAAF,KAAA,kBAAAE,GAAA,CAAAF,KAAA,CAAAC,MAAA,eAAyC;MACvChO,uDAAA,GAAqE;MAArEA,gEAAA,mCAAAiO,GAAA,CAAAF,KAAA,kBAAAE,GAAA,CAAAF,KAAA,CAAAC,MAAA,eAAqE;MAe1ChO,uDAAA,IAAuB;MAAvBA,wDAAA,cAAA4D,GAAA,CAAAiJ,OAAA,GAAuB,qBAAAjJ,GAAA,CAAAkG,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CJ;AAGJ;;;;;;;;;;;;IC8CpD9J,4DAAA,oBAA4E;IAACA,oDAAA,sDAA8C;IAAAA,0DAAA,EAAY;;;AD3CrJ,MAKajB,cAAc;EAgBzB6C,YAAoBE,sBAA8C;IAA9C,KAAAA,sBAAsB,GAAtBA,sBAAsB;IAb1C,KAAA4R,OAAO,GAAE,KAAK;IAEd,KAAA9Q,IAAI,GAAG,IAAIsG,qDAAS,CAAC;MACnBpG,KAAK,EAAE,IAAImG,uDAAW,CAAC,IAAI,EAAEE,8DAAkB,CAAC,6DAA6D,CAAC,CAAC;MAC/GpG,QAAQ,EAAE,IAAIkG,uDAAW,CAAC,IAAI,EAAEE,+DAAmB;KACpD,CAAC;IAGF,KAAAyK,QAAQ,GAAG,IAAI7K,uDAAY,EAAO;IAGlC,KAAA8K,QAAQ,GAAG,IAAI9K,uDAAY,EAAO;EAGlC;EAEA+K,KAAKA,CAAA;IACH,IAAI,CAACJ,OAAO,GAAG,KAAK;EACtB;EAEAK,KAAKA,CAACnR,IAAQ;IACZ,IAAI,CAACgR,QAAQ,CAACjJ,IAAI,CAAC/H,IAAI,CAAC;EAC1B;EAEAoR,MAAMA,CAAA;IACJ,IAAI,CAACH,QAAQ,CAAClJ,IAAI,EAAE;EACtB;EAEAsJ,SAASA,CAAA;IACP,IAAI,CAACC,OAAO,GAAG,IAAI,CAACpS,sBAAsB,CAAC2K,GAAG,CAAC,IAAI,CAAC7J,IAAI,CAACmL,KAAK,CAACjL,KAAK,CAAC,CAACZ,SAAS,CAAEiS,GAAG,IAAG;MACrF,IAAG,IAAI,CAACvR,IAAI,CAACmL,KAAK,CAAChL,QAAQ,KAAKoR,GAAG,EAAEpR,QAAQ,EAAC;QAC5C,IAAI,CAACgR,KAAK,CAACI,GAAG,CAAC;OAChB,MAAI;QACH,IAAI,CAACT,OAAO,GAAG,IAAI;;IAEvB,CAAC,CAAC;EACJ;EAEA1Q,QAAQA,CAAA,GAER;EAEAmI,WAAWA,CAAA;IACV;EAAA;;AA9CUpM,cAAc;mBAAdA,cAAc,EAAAiB,+DAAA,CAAAJ,yFAAA;AAAA;AAAdb,cAAc;QAAdA,cAAc;EAAAsE,SAAA;EAAAyH,OAAA;IAAA8I,QAAA;IAAAC,QAAA;EAAA;EAAAvQ,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAA2Q,wBAAAzQ,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV3B3D,4DAAA,aAA6B;MAIvBA,uDAAA,aAAmC;MA0BnCA,4DAAA,eAAiB;MACfA,uDAAA,eAAyB;MAC3BA,0DAAA,EAAM;MACNA,4DAAA,eAAiB;MACfA,uDAAA,eAAyB;MAC3BA,0DAAA,EAAM;MACNA,uDAAA,eAA0B;MAG5BA,0DAAA,EAAM;MAGRA,4DAAA,oBAAwB;MAGSA,wDAAA,oBAAAqU,gDAAA;QAAA,OAAUzQ,GAAA,CAAAkQ,KAAA,EAAO;MAAA,EAAC;MAEvC9T,4DAAA,cAAkB;MAAAA,oDAAA,cAAM;MAAAA,0DAAA,EAAK;MAC7BA,wDAAA,KAAAsU,oCAAA,wBAAuI;MAEvItU,4DAAA,WAAK;MAEDA,uDAAA,iBAAqE;MACrEA,4DAAA,iBAAW;MAACA,oDAAA,8CAAqC;MAAAA,0DAAA,EAAY;MAGnEA,4DAAA,WAAK;MAECA,uDAAA,iBAA2F;MAC3FA,4DAAA,iBAAW;MAACA,oDAAA,yCAAgC;MAAAA,0DAAA,EAAY;MAI5DA,4DAAA,kBAAgG;MAA1EA,wDAAA,mBAAAuU,iDAAA;QAAA,OAAS3Q,GAAA,CAAAqQ,SAAA,EAAW;MAAA,EAAC;MAAqDjU,oDAAA,aAAK;MAAAA,0DAAA,EAAS;MAC9GA,4DAAA,YAAM;MAAAA,oDAAA,+BAAuB;MAAAA,4DAAA,aAA4D;MAAzCA,wDAAA,mBAAAwU,4CAAA;QAAA,OAAS5Q,GAAA,CAAAoQ,MAAA,EAAQ;MAAA,EAAC;MAAuBhU,oDAAA,eAAO;MAAAA,0DAAA,EAAI;;;MAnBlGA,uDAAA,IAAkB;MAAlBA,wDAAA,cAAA4D,GAAA,CAAAhB,IAAA,CAAkB;MAGR5C,uDAAA,GAAa;MAAbA,wDAAA,SAAA4D,GAAA,CAAA8P,OAAA,CAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/C2B;AAI9B;AAE8C;;;;;;;;;;;;;;;;;ICyDpE1T,4DAAA,aAAgC;IAAAA,oDAAA,0BAAmB;IAAAA,0DAAA,EAAK;;;;;IACxDA,4DAAA,aAA+B;IAAAA,oDAAA,mBAAY;IAAAA,0DAAA,EAAK;;;;;IAM5CA,4DAAA,eAA2B;IAAAA,oDAAA,GAAkC;IAAAA,0DAAA,EAAW;;;;;IAA7CA,uDAAA,GAAkC;IAAlCA,gEAAA,MAAAiO,GAAA,CAAAF,KAAA,kBAAAE,GAAA,CAAAF,KAAA,CAAAC,MAAA,cAAkC;;;;;IAC7DhO,4DAAA,gBAAwB;IAACA,oDAAA,GAA8D;IAAAA,0DAAA,EAAY;;;;;IAA1EA,uDAAA,GAA8D;IAA9DA,gEAAA,mCAAAiO,GAAA,CAAAF,KAAA,kBAAAE,GAAA,CAAAF,KAAA,CAAAC,MAAA,cAA8D;;;;;IASvFhO,4DAAA,gBAAwB;IAACA,oDAAA,6CAAqC;IAAAA,0DAAA,EAAY;;;;;IAW1EA,4DAAA,gBAAwB;IAACA,oDAAA,mCAA2B;IAAAA,0DAAA,EAAY;;;;;IAChEA,4DAAA,gBAAwB;IAACA,oDAAA,+BAAuB;IAAAA,0DAAA,EAAY;;;;;IAC5DA,4DAAA,gBAAwB;IAACA,oDAAA,yCAAiC;IAAAA,0DAAA,EAAY;;;;;IAYtEA,4DAAA,gBAAwB;IAACA,oDAAA,+BAAuB;IAAAA,0DAAA,EAAY;;;;;;IAPhEA,4DAAA,UAAkB;IACTA,oDAAA,yBAAkB;IAAAA,0DAAA,EAAQ;IACjCA,4DAAA,yBAA0C;IACxCA,uDAAA,oBAAuL;IACvLA,4DAAA,iBAAwI;IAAzFA,wDAAA,mBAAAyU,yDAAA;MAAAzU,2DAAA,CAAA0U,IAAA;MAAA,MAAAC,OAAA,GAAA3U,2DAAA;MAAA,OAAAA,yDAAA,CAAA2U,OAAA,CAAAC,KAAA,IAAAD,OAAA,CAAAC,KAAA;IAAA,EAAwB;IACrE5U,4DAAA,eAAU;IAAAA,oDAAA,GAA2C;IAAAA,0DAAA,EAAW;IAElEA,wDAAA,IAAA6U,4CAAA,wBAA4D;IAC9D7U,0DAAA,EAAiB;;;;IALRA,uDAAA,GAAoC;IAApCA,wDAAA,SAAA0B,OAAA,CAAAkT,KAAA,uBAAoC,cAAAlT,OAAA,CAAAoT,IAAA;IAC6B9U,uDAAA,GAAmC;IAAnCA,yDAAA,+BAAmC,iBAAA0B,OAAA,CAAAkT,KAAA;IAC/F5U,uDAAA,GAA2C;IAA3CA,+DAAA,CAAA0B,OAAA,CAAAkT,KAAA,mCAA2C;IAE3C5U,uDAAA,GAAU;IAAVA,wDAAA,SAAA0B,OAAA,CAAAoT,IAAA,CAAU;;;;;;IAO1B9U,4DAAA,iBAAkJ;IAAzEA,wDAAA,mBAAAgV,4DAAA;MAAAhV,2DAAA,CAAAiV,IAAA;MAAA,MAAAC,OAAA,GAAAlV,2DAAA;MAAA,OAASA,yDAAA,CAAAkV,OAAA,CAAAC,QAAA,EAAU;IAAA,EAAC;IAAqDnV,oDAAA,mBAAY;IAAAA,0DAAA,EAAS;;;;IAA/JA,wDAAA,cAAA4O,OAAA,CAAAtC,QAAA,KAAAsC,OAAA,CAAAhM,IAAA,CAAAkK,KAAA,CAAqC;;;;;IAC7C9M,4DAAA,oBAAgE;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAY;;;;;;IAQ/FA,4DAAA,iBAAuF;IAAnDA,wDAAA,mBAAAoV,4DAAA;MAAApV,2DAAA,CAAA2P,IAAA;MAAA,MAAAE,OAAA,GAAA7P,2DAAA;MAAA,OAASA,yDAAA,CAAA6P,OAAA,CAAAwF,MAAA,EAAQ;IAAA,EAAC;IAAiCrV,4DAAA,mBAA2B;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAW;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAS;;;;;;IACtJA,4DAAA,iBAAuF;IAAnDA,wDAAA,mBAAAsV,4DAAA;MAAAtV,2DAAA,CAAAuV,IAAA;MAAA,MAAAxF,OAAA,GAAA/P,2DAAA;MAAA,OAASA,yDAAA,CAAA+P,OAAA,CAAAyF,MAAA,EAAQ;IAAA,EAAC;IAAiCxV,4DAAA,mBAA2B;IAAAA,oDAAA,aAAM;IAAAA,0DAAA,EAAW;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAS;;;;AD/G/J,MAKalB,gBAAgB;EAuB3B8C,YAAoBE,sBAA8C,EAC9CqI,YAAyB,EACvBtI,OAAe,EAClBuI,MAAiB;IAHhB,KAAAtI,sBAAsB,GAAtBA,sBAAsB;IACtB,KAAAqI,YAAY,GAAZA,YAAY;IACV,KAAAtI,OAAO,GAAPA,OAAO;IACV,KAAAuI,MAAM,GAANA,MAAM;IAtBzB,KAAA0K,IAAI,GAAY,KAAK;IACrB,KAAAxI,QAAQ,GAAY,KAAK;IACzB,KAAAmJ,KAAK,GAAG,IAAI;IACZ,KAAAb,KAAK,GAAG,IAAI;IAEZ,KAAAvI,QAAQ,GAAU,EAAE;IACpB,KAAAvJ,KAAK,GAAU,EAAE;IACjB,KAAAC,QAAQ,GAAU,EAAE;IAEpB,KAAAyN,IAAI,GAAa,EAAE;IACnB,KAAAC,UAAU,GAAY,EAAE;IACxB,KAAAC,IAAI,GAAY,EAAE;IAElB,KAAAC,QAAQ,GAAY,EAAE;IAqBtB,KAAA/N,IAAI,GAAG,IAAIsG,qDAAS,CAAC;MACjBrG,QAAQ,EAAE,IAAIoG,uDAAW,CAAC,IAAI,CAACoD,QAAQ,EAAClD,gEAAoB,CAAC,CAAC,CAAC,CAAC;MAChErG,KAAK,EAAE,IAAImG,uDAAW,CAAC,IAAI,CAACnG,KAAK,EAACqG,8DAAkB,CAAC,6DAA6D,CAAC,CAAC;MACpHpG,QAAQ,EAAE,IAAIkG,uDAAW,CAAC,IAAI,CAAClG,QAAQ,EAACoG,8DAAkB,CAAC,yDAAyD,CAAC,CAAC;MACtHuM,iBAAiB,EAAE,IAAIzM,uDAAW,CAAC,IAAI,CAAClG,QAAQ,EAACoG,+DAAmB;KACrE,CACF;EAjBD;EAEAnG,QAAQA,CAAA;IACN,IAAI,CAACqJ,QAAQ,GAAGjK,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACtD,IAAI,CAACS,KAAK,GAAGV,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAChD,IAAI,CAACU,QAAQ,GAAGX,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACtD,IAAI,CAACiO,WAAW,EAAE;IAClB,IAAI,CAAC4D,OAAO,EAAE;EAChB;EAWAyB,UAAUA,CAAA;IACR,IAAI,CAACb,IAAI,GAAG,CAAC,IAAI,CAACA,IAAI;EACxB;EAEAZ,OAAOA,CAAA;IACL,IAAI,CAAC3H,SAAS,GAAG,IAAI,CAACzK,sBAAsB,CAAC2K,GAAG,CAAC,IAAI,CAAC7J,IAAI,CAACmL,KAAK,CAACjL,KAAK,CAAC,CAAC4J,IAAI,CAACtD,oDAAI,CAAC,CAAC,CAAC,CAAC,CAClFlH,SAAS,CAAEqJ,MAAM,IAAG;MACnB,IAAI,CAACqK,KAAK,GAAGrK,MAAM;IACrB,CAAC,CAAC;EACN;EAEA+E,WAAWA,CAAA;IACT,IAAI,CAACU,QAAQ,GAAG,IAAI,CAAC7G,YAAY,CAAC8G,MAAM,EAAE,CACvC/O,SAAS,CAACuI,IAAI,IAAG;MAChB,IAAI,CAACkG,QAAQ,GAAGlG,IAAI,CAACyG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAC9E,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC;MAE7D,IAAI,CAACmE,IAAI,GAAG/F,IAAI,CAACyG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAChF,MAAM,IAAI,OAAO,IAAIgF,CAAC,CAAC9E,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC;MAChF,IAAI,CAACoE,UAAU,GAAGhG,IAAI,CAACyG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAChF,MAAM,IAAI,OAAO,IAAIgF,CAAC,CAAC9E,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC;MACtF,IAAI,CAACqE,IAAI,GAAGjG,IAAI,CAACyG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAChF,MAAM,IAAI,MAAM,IAAIgF,CAAC,CAAC9E,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC;IACjF,CAAC,CAAC;EACN;EAEA8I,QAAQA,CAAA;IACN,IAAG,IAAI,CAACvS,IAAI,CAACkK,KAAK,EAAE;MAClB,IAAI,CAAC+I,UAAU,GAAG,IAAI,CAAC/T,sBAAsB,CAACwR,MAAM,CAAC,IAAI,CAAC1Q,IAAI,CAACmL,KAAK,CAAC,CAAC7L,SAAS,CAAEiS,GAAG,IAAI;QACtF/R,YAAY,CAACO,OAAO,CAAC,gBAAgB,EAACwR,GAAG,CAACtR,QAAQ,CAAC;QACnDT,YAAY,CAACO,OAAO,CAAC,aAAa,EAACwR,GAAG,CAACrR,KAAK,CAAC;QAC7CV,YAAY,CAACO,OAAO,CAAC,gBAAgB,EAACwR,GAAG,CAACpR,QAAQ,CAAC;QACnD,IAAI,CAACsJ,QAAQ,GAAG8H,GAAG,CAACtR,QAAQ;QAC5B,IAAI,CAACC,KAAK,GAAGqR,GAAG,CAACrR,KAAK;QACtB,IAAI,CAACC,QAAQ,GAAGoR,GAAG,CAACpR,QAAQ;QAC5BuH,MAAM,CAACwL,QAAQ,CAACC,MAAM,EAAE;MAC1B,CAAC,CAAC;;EAEN;EAEAvJ,MAAMA,CAAA;IACJ,IAAI,CAACD,SAAS,GAAG,IAAI,CAACzK,sBAAsB,CAAC2K,GAAG,CAAC,IAAI,CAAC7J,IAAI,CAACmL,KAAK,CAACjL,KAAK,CAAC,CAAC4J,IAAI,CAACtD,oDAAI,CAAC,CAAC,CAAC,CAAC,CAClFlH,SAAS,CAAEqJ,MAAM,IAAG;MACnB,IAAI,CAACe,QAAQ,GAAIf,MAAM,CAAC1I,QAAQ,KAAK,IAAI,CAACwJ,QAAQ,IAAMd,MAAM,CAACzI,KAAK,KAAK,IAAI,CAACA,KAAM,IAAKyI,MAAM,CAACxI,QAAQ,KAAK,IAAI,CAACA,QAAS;IAC7H,CAAC,CAAC;EACN;EAEAsS,MAAMA,CAAA;IACJjT,YAAY,CAACO,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC;IAC1C,IAAI,CAACd,OAAO,CAACa,aAAa,CAAC,OAAO,CAAC;EACrC;EAEA8S,MAAMA,CAAA;IACJ,IAAI,CAACpL,MAAM,CAACG,IAAI,CAAC1F,gBAAgB,EAAE;MACjC2F,YAAY,EAAC,IAAI;MACjBC,IAAI,EAAE,IAAI,CAACmL;KACZ,CAAC,CAACI,WAAW,EAAE,CAAC9T,SAAS,CAAC,MAAI;MAACM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACmT,KAAK,CAAC;IAAA,CAAC,CAAC;EAC3D;;AAnGW9W,gBAAgB;mBAAhBA,gBAAgB,EAAAkB,+DAAA,CAAAJ,yFAAA,GAAAI,+DAAA,CAAAmD,qEAAA,GAAAnD,+DAAA,CAAA6G,mDAAA,GAAA7G,+DAAA,CAAA8G,+DAAA;AAAA;AAAhBhI,gBAAgB;QAAhBA,gBAAgB;EAAAuE,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAwS,0BAAAtS,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MClB7B3D,4DAAA,aAAqB;MASRA,oDAAA,cAAO;MAAAA,0DAAA,EAAM;MAEpBA,4DAAA,eAAU;MAGNA,uDAAA,aAAmC;MAYnCA,4DAAA,eAA6B;MACRA,wDAAA,mBAAAkW,mDAAA;QAAA,OAAStS,GAAA,CAAA+R,UAAA,EAAY;MAAA,EAAC;MAAE3V,uDAAA,eAAyD;MAACA,0DAAA,EAAS;MAC9GA,4DAAA,eAA+D;MACpDA,oDAAA,yBAAiB;MAAAA,0DAAA,EAAW;MAGzCA,uDAAA,eAAmC;MAanCA,4DAAA,eAAiB;MACfA,uDAAA,eAAyB;MAC3BA,0DAAA,EAAM;MACNA,4DAAA,eAAiB;MACfA,uDAAA,eAAyB;MAC3BA,0DAAA,EAAM;MACNA,uDAAA,eAA0B;MAG5BA,0DAAA,EAAM;MAIVA,4DAAA,qBAAe;MAKiBA,wDAAA,oBAAAmW,kDAAA;QAAA,OAAUvS,GAAA,CAAA4I,MAAA,EAAQ;MAAA,EAAC;MAEzCxM,wDAAA,KAAAoW,+BAAA,iBAAwD;MACxDpW,wDAAA,KAAAqW,+BAAA,iBAAgD;MAEhDrW,4DAAA,WAAK;MACIA,oDAAA,kBAAU;MAAAA,0DAAA,EAAQ;MACzBA,4DAAA,0BAAyC;MACMA,wDAAA,2BAAAsW,0DAAAlV,MAAA;QAAA,OAAAwC,GAAA,CAAAyI,QAAA,GAAAjL,MAAA;MAAA,EAAsB;MAAnEpB,0DAAA,EAA8I;MAC9IA,wDAAA,KAAAuW,qCAAA,uBAAwE;MACxEvW,wDAAA,KAAAwW,sCAAA,wBAAmG;MACrGxW,0DAAA,EAAiB;MAInBA,4DAAA,WAAK;MACIA,oDAAA,eAAO;MAAAA,0DAAA,EAAQ;MACtBA,4DAAA,0BAAyC;MACJA,wDAAA,2BAAAyW,0DAAArV,MAAA;QAAA,OAAAwC,GAAA,CAAAd,KAAA,GAAA1B,MAAA;MAAA,EAAmB;MAAtDpB,0DAAA,EAA4G;MAC5GA,wDAAA,KAAA0W,sCAAA,wBAA0E;MAC5E1W,0DAAA,EAAiB;MAGnBA,4DAAA,WAAK;MACIA,oDAAA,kBAAU;MAAAA,0DAAA,EAAQ;MACzBA,4DAAA,0BAAuC;MACkDA,wDAAA,2BAAA2W,0DAAAvV,MAAA;QAAA,OAAAwC,GAAA,CAAAb,QAAA,GAAA3B,MAAA;MAAA,EAAsB;MAA7GpB,0DAAA,EAA6L;MAC7LA,4DAAA,kBAAwI;MAAzFA,wDAAA,mBAAA4W,mDAAA;QAAA,OAAAhT,GAAA,CAAA6R,KAAA,IAAA7R,GAAA,CAAA6R,KAAA;MAAA,EAAwB;MACrEzV,4DAAA,gBAAU;MAAAA,oDAAA,IAA2C;MAAAA,0DAAA,EAAW;MAElEA,wDAAA,KAAA6W,sCAAA,wBAAgE;MAChE7W,wDAAA,KAAA8W,sCAAA,wBAA4D;MAC5D9W,wDAAA,KAAA+W,sCAAA,wBAAsE;MAExE/W,0DAAA,EAAiB;MAGnBA,wDAAA,KAAAgX,gCAAA,mBASM;MAERhX,0DAAA,EAAO;MAEPA,4DAAA,eAA0D;MACxDA,wDAAA,KAAAiX,mCAAA,qBAAuK;MACvKjX,wDAAA,KAAAkX,sCAAA,wBAAuF;MACzFlX,0DAAA,EAAM;MAMlBA,4DAAA,eAA0D;MACpDA,wDAAA,KAAAmX,mCAAA,qBAAwJ;MACtJnX,wDAAA,KAAAoX,mCAAA,qBAAuJ;MAC/JpX,0DAAA,EAAM;MAMJA,4DAAA,yBAAwC;MAOTA,oDAAA,mBAAW;MAAAA,0DAAA,EAAK;MACrCA,uDAAA,4BAA+G;MAC/GA,4DAAA,4BAAmC;MACjCA,oDAAA,IACF;MAAAA,0DAAA,EAAmB;MAIvBA,4DAAA,qBAAe;MAEUA,oDAAA,0BAAiB;MAAAA,0DAAA,EAAK;MAC3CA,uDAAA,6BAAqH;MACrHA,4DAAA,6BAAmC;MACjCA,oDAAA,KACF;MAAAA,0DAAA,EAAmB;MAGvBA,4DAAA,sBAAe;MAEUA,oDAAA,uBAAc;MAAAA,0DAAA,EAAK;MACxCA,uDAAA,6BAA+G;MAC/GA,4DAAA,6BAAmC;MACjCA,oDAAA,KACF;MAAAA,0DAAA,EAAmB;;;MAlGyBA,uDAAA,IAAkB;MAAlBA,wDAAA,cAAA4D,GAAA,CAAAhB,IAAA,CAAkB;MAEvD5C,uDAAA,GAAW;MAAXA,wDAAA,UAAA4D,GAAA,CAAAkR,IAAA,CAAW;MACX9U,uDAAA,GAAU;MAAVA,wDAAA,SAAA4D,GAAA,CAAAkR,IAAA,CAAU;MAKJ9U,uDAAA,GAAkB;MAAlBA,wDAAA,cAAA4D,GAAA,CAAAkR,IAAA,CAAkB,YAAAlR,GAAA,CAAAyI,QAAA;MACdrM,uDAAA,GAAc;MAAdA,wDAAA,SAAA4D,GAAA,CAAA0I,QAAA,CAAc;MACbtM,uDAAA,GAAU;MAAVA,wDAAA,SAAA4D,GAAA,CAAAkR,IAAA,CAAU;MAQf9U,uDAAA,GAAkB;MAAlBA,wDAAA,cAAA4D,GAAA,CAAAkR,IAAA,CAAkB,YAAAlR,GAAA,CAAAd,KAAA;MACb9C,uDAAA,GAAU;MAAVA,wDAAA,SAAA4D,GAAA,CAAAkR,IAAA,CAAU;MAOf9U,uDAAA,GAAoC;MAApCA,wDAAA,SAAA4D,GAAA,CAAA6R,KAAA,uBAAoC,cAAA7R,GAAA,CAAAkR,IAAA,aAAAlR,GAAA,CAAAb,QAAA;MAC6B/C,uDAAA,GAAmC;MAAnCA,yDAAA,+BAAmC,iBAAA4D,GAAA,CAAA6R,KAAA;MAC/FzV,uDAAA,GAA2C;MAA3CA,+DAAA,CAAA4D,GAAA,CAAA6R,KAAA,mCAA2C;MAE3CzV,uDAAA,GAAU;MAAVA,wDAAA,SAAA4D,GAAA,CAAAkR,IAAA,CAAU;MACV9U,uDAAA,GAAU;MAAVA,wDAAA,SAAA4D,GAAA,CAAAkR,IAAA,CAAU;MACV9U,uDAAA,GAAU;MAAVA,wDAAA,SAAA4D,GAAA,CAAAkR,IAAA,CAAU;MAKpB9U,uDAAA,GAAU;MAAVA,wDAAA,SAAA4D,GAAA,CAAAkR,IAAA,CAAU;MAc+B9U,uDAAA,GAAU;MAAVA,wDAAA,SAAA4D,GAAA,CAAAkR,IAAA,CAAU;MAClB9U,uDAAA,GAAuB;MAAvBA,wDAAA,UAAA4D,GAAA,CAAA0I,QAAA,IAAA1I,GAAA,CAAAkR,IAAA,CAAuB;MAQ7D9U,uDAAA,GAAW;MAAXA,wDAAA,UAAA4D,GAAA,CAAAkR,IAAA,CAAW;MACT9U,uDAAA,GAAW;MAAXA,wDAAA,UAAA4D,GAAA,CAAAkR,IAAA,CAAW;MAekC9U,uDAAA,GAAyC;MAAzCA,wDAAA,UAAA4D,GAAA,CAAA4M,IAAA,CAAAxC,MAAA,GAAApK,GAAA,CAAA+M,QAAA,CAAA3C,MAAA,OAAyC;MAEzFhO,uDAAA,GACF;MADEA,gEAAA,MAAA4D,GAAA,CAAA4M,IAAA,CAAAxC,MAAA,cAAApK,GAAA,CAAA+M,QAAA,CAAA3C,MAAA,MACF;MAOkDhO,uDAAA,GAA+C;MAA/CA,wDAAA,UAAA4D,GAAA,CAAA6M,UAAA,CAAAzC,MAAA,GAAApK,GAAA,CAAA+M,QAAA,CAAA3C,MAAA,OAA+C;MAE/FhO,uDAAA,GACF;MADEA,gEAAA,MAAA4D,GAAA,CAAA6M,UAAA,CAAAzC,MAAA,cAAApK,GAAA,CAAA+M,QAAA,CAAA3C,MAAA,MACF;MAMkDhO,uDAAA,GAAyC;MAAzCA,wDAAA,UAAA4D,GAAA,CAAA8M,IAAA,CAAA1C,MAAA,GAAApK,GAAA,CAAA+M,QAAA,CAAA3C,MAAA,OAAyC;MAEzFhO,uDAAA,GACF;MADEA,gEAAA,MAAA4D,GAAA,CAAA8M,IAAA,CAAA1C,MAAA,cAAApK,GAAA,CAAA+M,QAAA,CAAA3C,MAAA,MACF;;;;;;AD/IiB;AAuG7B,MAKanJ,gBAAgB;EAI3BjD,YAAmBqJ,SAAyC,EAChBR,IAAW,EACnC3I,sBAA8C,EAC5CD,OAAe;IAHlB,KAAAoJ,SAAS,GAATA,SAAS;IACgB,KAAAR,IAAI,GAAJA,IAAI;IAC5B,KAAA3I,sBAAsB,GAAtBA,sBAAsB;IACpB,KAAAD,OAAO,GAAPA,OAAO;EAC7B;EAEAwJ,SAASA,CAAA;IACP,IAAI,CAACiM,UAAU,GAAG,IAAI,CAACxV,sBAAsB,CAACwJ,MAAM,CAAC,IAAI,CAACb,IAAI,CAACT,EAAE,CAAC,CAAC9H,SAAS,CAAEiS,GAAG,IAAG;MAClF3R,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE0R,GAAG,CAAC;MACjC/R,YAAY,CAACO,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC;MAC1C,IAAI,CAACd,OAAO,CAACa,aAAa,CAAC,OAAO,CAAC;IACrC,CAAC,CAAC;EACJ;EAEAgJ,SAASA,CAAA;IACP,IAAI,CAACT,SAAS,CAACU,KAAK,EAAE;EACxB;;AApBW9G,gBAAgB;mBAAhBA,gBAAgB,EAAA7E,+DAAA,CAAA8G,kEAAA,GAAA9G,+DAAA,CAKPgJ,qEAAe,GAAAhJ,+DAAA,CAAAJ,yFAAA,GAAAI,+DAAA,CAAA6G,mDAAA;AAAA;AALxBhC,gBAAgB;QAAhBA,gBAAgB;EAAAxB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAA8T,0BAAA5T,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;ME9H7B3D,4DAAA,UAAK;MACqCA,oDAAA,GAA+B;MAAAA,0DAAA,EAAM;MAC3EA,4DAAA,aAAwB;MACMA,oDAAA,oDAA6C;MAAAA,0DAAA,EAAI;MAE/EA,4DAAA,aAA4C;MACDA,wDAAA,mBAAAwX,kDAAA;QAAA,OAAS5T,GAAA,CAAAyH,SAAA,EAAW;MAAA,EAAC;MAAErL,oDAAA,qBAAc;MAAAA,0DAAA,EAAS;MACrFA,4DAAA,gBAAuD;MAAtBA,wDAAA,mBAAAyX,kDAAA;QAAA,OAAS7T,GAAA,CAAA8H,SAAA,EAAW;MAAA,EAAC;MAAC1L,oDAAA,eAAO;MAAAA,0DAAA,EAAS;;;MANrCA,uDAAA,GAA+B;MAA/BA,gEAAA,mBAAA4D,GAAA,CAAA6G,IAAA,CAAA5H,QAAA,KAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDH;AAI0B;;;;;;;;;;;;;;ICkElF7C,4DAAA,gBAAkC;IAACA,oDAAA,6CAAqC;IAAAA,0DAAA,EAAY;;;;;IACpFA,4DAAA,gBAAiC;IAACA,oDAAA,6BAAqB;IAAAA,0DAAA,EAAY;;;AD9DjF,MAKaf,eAAe;EAyB5B2C,YAAoBE,sBAA8C,EAASD,OAAe,EAASsI,YAAyB;IAAxG,KAAArI,sBAAsB,GAAtBA,sBAAsB;IAAiC,KAAAD,OAAO,GAAPA,OAAO;IAAiB,KAAAsI,YAAY,GAAZA,YAAY;IAvB7G,KAAAsL,KAAK,GAAG,IAAI;IACZ,KAAAb,KAAK,GAAG,IAAI;IAGZ,KAAAhB,QAAQ,GAAG,IAAI7K,uDAAY,EAAO;IAElC;IACA,KAAAnG,IAAI,GAAG,IAAIsG,qDAAS,CAAC;MACjBrG,QAAQ,EAAE,IAAIoG,uDAAW,CAAC,IAAI,EAACE,gEAAoB,CAAC,CAAC,CAAC,CAAC;MACvDrG,KAAK,EAAE,IAAImG,uDAAW,CAAC,IAAI,EAAC,CAACE,8DAAkB,CAAC,6DAA6D,CAAC,EAACA,+DAAmB,CAAC,CAAC;MACpIpG,QAAQ,EAAE,IAAIkG,uDAAW,CAAC,IAAI,EAACE,8DAAkB,CAAC,yDAAyD,CAAC,CAAC;MAC7GuM,iBAAiB,EAAE,IAAIzM,uDAAW,CAAC,IAAI,EAACE,+DAAmB;KAC9D,EACC;MAAEuO,UAAU,EAAE,CAAC,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC,EAAC,IAAI,CAACC,cAAc,CAAC,UAAU,EAAE,mBAAmB,CAAC;IAAC,CAAC,CAC/F;IAOD,KAAAC,aAAa,GAAE,KAAK;EAEyG;EAE7HD,cAAcA,CAACE,WAAmB,EAAEC,mBAA2B;IAC7D,OAAQC,eAAgC,IAAI;MAC1C,MAAMC,OAAO,GAAGD,eAAe,CAACvL,GAAG,CAACqL,WAAW,CAAC;MAChD,MAAMI,eAAe,GAAGF,eAAe,CAACvL,GAAG,CAACsL,mBAAmB,CAAC;MAEhE,IAAIG,eAAgB,CAACC,MAAM,IAAI,CAACD,eAAgB,CAACC,MAAM,GAAG,oBAAoB,CAAC,EAAE;QAC/E,OAAO,IAAI;;MAGb,IAAIF,OAAQ,CAAClK,KAAK,KAAKmK,eAAgB,CAACnK,KAAK,EAAE;QAC7C,MAAMqK,KAAK,GAAG;UAAEC,kBAAkB,EAAE;QAAyB,CAAE;QAC/DH,eAAgB,CAACI,SAAS,CAACF,KAAK,CAAC;QACjC,OAAOA,KAAK;OACb,MAAM;QACLF,eAAgB,CAACI,SAAS,CAAC,IAAI,CAAC;QAChC,OAAO,IAAI;;IAEf,CAAC;EACH;EAEAX,UAAUA,CAACG,WAAmB;IAC5B,OAAQE,eAAgC,IAAI;MAC1C,MAAMC,OAAO,GAAGD,eAAe,CAACvL,GAAG,CAACqL,WAAW,CAAC;MAEhD,IAAIG,OAAQ,CAACE,MAAM,IAAI,CAACF,OAAQ,CAACE,MAAM,GAAG,iBAAiB,CAAC,EAAE;QAC5D,OAAO,IAAI;;MAGb,IAAG,IAAI,CAACN,aAAa,EAAC;QACpB,MAAMO,KAAK,GAAG;UAAEG,eAAe,EAAE;QAAuB,CAAE;QAC1DN,OAAQ,CAACK,SAAS,CAACF,KAAK,CAAC;QACzB,OAAOA,KAAK;OACb,MAAK;QACJH,OAAQ,CAACK,SAAS,CAAC,IAAI,CAAC;QACxB,OAAO,IAAI;;IAEf,CAAC;EACH;EAEAE,QAAQA,CAAA;IACN,IAAI,CAACtE,OAAO,GAAG,IAAI,CAACpS,sBAAsB,CAAC2K,GAAG,CAAC,IAAI,CAAC7J,IAAI,CAACmL,KAAK,CAACjL,KAAK,CAAC,CAACZ,SAAS,CAAEiS,GAAG,IAAG;MACrF,IAAI,CAAC0D,aAAa,GAAG1D,GAAG,IAAIsE,SAAS;MACrCjW,OAAO,CAACC,GAAG,CAAC,IAAI,CAACoV,aAAa,CAAC;IACjC,CAAC,CAAC;EACJ;EAGA9K,QAAQA,CAAA;IACN,IAAG,IAAI,CAACnK,IAAI,CAACkK,KAAK,IAAI,CAAC,IAAI,CAAC+K,aAAa,EAAE;MACzC,IAAI,CAACa,UAAU,GAAG,IAAI,CAAC5W,sBAAsB,CAACwR,MAAM,CAAC,IAAI,CAAC1Q,IAAI,CAACmL,KAAK,CAAC,CAAC7L,SAAS,CAAEiS,GAAG,IAAI;QACtF,IAAI,CAACP,QAAQ,CAACjJ,IAAI,CAAC,IAAI,CAAC/H,IAAI,CAACmL,KAAK,CAAC;MACrC,CAAC,CAAC;;EAEN;EAEA5C,WAAWA,CAAA;IACT,IAAG,IAAI,CAACuN,UAAU,EAAC;MACjB,IAAI,CAACA,UAAU,CAACtN,WAAW,EAAE;;IAGhC;EACD;;EAEApI,QAAQA,CAAA,GAER;;AA5FW/D,eAAe;mBAAfA,eAAe,EAAAe,+DAAA,CAAAJ,yFAAA,GAAAI,+DAAA,CAAAmD,mDAAA,GAAAnD,+DAAA,CAAA6G,qEAAA;AAAA;AAAf5H,eAAe;QAAfA,eAAe;EAAAoE,SAAA;EAAAyH,OAAA;IAAA8I,QAAA;EAAA;EAAAtQ,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAkV,yBAAAhV,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCd5B3D,4DAAA,aAA6B;MAoDGA,wDAAA,oBAAA4Y,gDAAA;QAAA,OAAUhV,GAAA,CAAA4U,QAAA,EAAU;MAAA,EAAC;MAE3CxY,4DAAA,YAAkB;MAAAA,oDAAA,cAAO;MAAAA,0DAAA,EAAK;MAE9BA,4DAAA,UAAK;MACIA,oDAAA,iBAAU;MAAAA,0DAAA,EAAQ;MACzBA,4DAAA,yBAAyC;MACvCA,uDAAA,mBAAoG;MACpGA,4DAAA,gBAAU;MAAAA,oDAAA,IAAkC;MAAAA,0DAAA,EAAW;MACvDA,4DAAA,iBAAW;MAACA,oDAAA,IAA8D;MAAAA,0DAAA,EAAY;MAK1FA,4DAAA,WAAK;MACIA,oDAAA,eAAO;MAAAA,0DAAA,EAAQ;MACtBA,4DAAA,yBAAyC;MACvCA,uDAAA,gBAAqE;MACrEA,wDAAA,KAAA6Y,qCAAA,wBAAoF;MACpF7Y,wDAAA,KAAA8Y,qCAAA,wBAAmE;MACrE9Y,0DAAA,EAAiB;MAGnBA,4DAAA,WAAK;MACIA,oDAAA,kBAAU;MAAAA,0DAAA,EAAQ;MACzBA,4DAAA,0BAAuC;MACrCA,uDAAA,qBAA+I;MAC/IA,4DAAA,kBAAwI;MAAzFA,wDAAA,mBAAA+Y,kDAAA;QAAA,OAAAnV,GAAA,CAAA6R,KAAA,IAAA7R,GAAA,CAAA6R,KAAA;MAAA,EAAwB;MACrEzV,4DAAA,gBAAU;MAAAA,oDAAA,IAA2C;MAAAA,0DAAA,EAAW;MAElEA,4DAAA,iBAAW;MAACA,oDAAA,oCAA2B;MAAAA,0DAAA,EAAY;MACnDA,4DAAA,iBAAW;MAACA,oDAAA,gCAAuB;MAAAA,0DAAA,EAAY;MAC/CA,4DAAA,iBAAW;MAACA,oDAAA,0CAAiC;MAAAA,0DAAA,EAAY;MAK7DA,4DAAA,WAAK;MACIA,oDAAA,0BAAkB;MAAAA,0DAAA,EAAQ;MACjCA,4DAAA,yBAAyC;MACvCA,uDAAA,qBAAiK;MACjKA,4DAAA,kBAAwI;MAAzFA,wDAAA,mBAAAgZ,kDAAA;QAAA,OAAApV,GAAA,CAAAgR,KAAA,IAAAhR,GAAA,CAAAgR,KAAA;MAAA,EAAwB;MACrE5U,4DAAA,gBAAU;MAAAA,oDAAA,IAA2C;MAAAA,0DAAA,EAAW;MAElEA,4DAAA,iBAAY;MAACA,oDAAA,gCAAuB;MAAAA,0DAAA,EAAY;MAMpDA,4DAAA,kBAAwH;MAAvDA,wDAAA,mBAAAiZ,kDAAA;QAAA,OAASrV,GAAA,CAAAmJ,QAAA,EAAU;MAAA,EAAC;MAAmC/M,oDAAA,sBAAc;MAAAA,0DAAA,EAAS;;;;MAlDnGA,uDAAA,GAAkB;MAAlBA,wDAAA,cAAA4D,GAAA,CAAAhB,IAAA,CAAkB;MAQhD5C,uDAAA,IAAkC;MAAlCA,gEAAA,MAAA0I,GAAA,CAAAqF,KAAA,kBAAArF,GAAA,CAAAqF,KAAA,CAAAC,MAAA,cAAkC;MAChChO,uDAAA,GAA8D;MAA9DA,gEAAA,mCAAA0I,GAAA,CAAAqF,KAAA,kBAAArF,GAAA,CAAAqF,KAAA,CAAAC,MAAA,cAA8D;MAS9DhO,uDAAA,GAAoB;MAApBA,wDAAA,UAAA4D,GAAA,CAAAiU,aAAA,CAAoB;MACpB7X,uDAAA,GAAmB;MAAnBA,wDAAA,SAAA4D,GAAA,CAAAiU,aAAA,CAAmB;MAOf7X,uDAAA,GAAoC;MAApCA,wDAAA,SAAA4D,GAAA,CAAA6R,KAAA,uBAAoC;MACoBzV,uDAAA,GAAmC;MAAnCA,yDAAA,+BAAmC,iBAAA4D,GAAA,CAAA6R,KAAA;MAC/FzV,uDAAA,GAA2C;MAA3CA,+DAAA,CAAA4D,GAAA,CAAA6R,KAAA,mCAA2C;MAYvCzV,uDAAA,IAAoC;MAApCA,wDAAA,SAAA4D,GAAA,CAAAgR,KAAA,uBAAoC;MACoB5U,uDAAA,GAAmC;MAAnCA,yDAAA,+BAAmC,iBAAA4D,GAAA,CAAAgR,KAAA;MAC/F5U,uDAAA,GAA2C;MAA3CA,+DAAA,CAAA4D,GAAA,CAAAgR,KAAA,mCAA2C;MAQnD5U,uDAAA,GAAwB;MAAxBA,wDAAA,cAAA4D,GAAA,CAAAhB,IAAA,CAAAkK,KAAA,CAAwB;;;;;;;;;;;;;;;;;;;;;;;;ACjG1C,MAAMoM,OAAO,GAAG;EAAE,cAAc,EAAE;AAAkB,CAAC;AACrD,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,MAGa1U,WAAW;EAItB7C,YAAoBwX,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCnI,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACmI,IAAI,CAAC3M,GAAG,CAAU0M,OAAO,CAAC;EACxC;EAEA1M,GAAGA,CAACzC,EAAO;IACT,OAAO,IAAI,CAACoP,IAAI,CAAC3M,GAAG,CAAQ,GAAG0M,OAAO,IAAInP,EAAE,EAAE,CAAC;EACjD;EAEAsJ,MAAMA,CAAC7I,IAAS;IACd,OAAO,IAAI,CAAC2O,IAAI,CAACC,IAAI,CAACF,OAAO,EAAE1O,IAAI,CAAC;EACtC;EAEAuC,MAAMA,CAAChD,EAAO,EAAES,IAAS;IACvB,OAAO,IAAI,CAAC2O,IAAI,CAACE,GAAG,CAAC,GAAGH,OAAO,IAAInP,EAAE,EAAE,EAAES,IAAI,EAAC;MAACyO;IAAO,CAAC,CAAC;EAC1D;EAEA5N,MAAMA,CAACtB,EAAO;IACZ,OAAO,IAAI,CAACoP,IAAI,CAAC9N,MAAM,CAAC,GAAG6N,OAAO,IAAInP,EAAE,EAAE,CAAC;EAC7C;EAEAuP,SAASA,CAAA;IACP,OAAO,IAAI,CAACH,IAAI,CAAC9N,MAAM,CAAC6N,OAAO,CAAC;EAClC;EAEAK,WAAWA,CAACvP,KAAU;IACpB,OAAO,IAAI,CAACmP,IAAI,CAAC3M,GAAG,CAAU,GAAG0M,OAAO,UAAUlP,KAAK,EAAE,CAAC;EAC5D;EAEAkJ,UAAUA,CAAC9G,QAAa;IACtB,OAAO,IAAI,CAAC+M,IAAI,CAACE,GAAG,CAAM,GAAGH,OAAO,SAAS,EAAE9M,QAAQ,EAAE;MAAC6M;IAAO,CAAC,CAAC;EACrE;EAEAO,WAAWA,CAACpN,QAAa;IACvB,OAAO,IAAI,CAAC+M,IAAI,CAACE,GAAG,CAAMH,OAAO,EAAE9M,QAAQ,EAAE;MAAC6M;IAAO,CAAC,CAAC;EACzD;;AAxCWzU,WAAW;mBAAXA,WAAW,EAAAzE,sDAAA,CAAAJ,4DAAA;AAAA;AAAX6E,WAAW;SAAXA,WAAW;EAAAmV,OAAA,EAAXnV,WAAW,CAAAoV,IAAA;EAAAC,UAAA,EAFV;AAAM;;;;;;;;;;;;;;;;;;;ACJpB,MAAMZ,OAAO,GAAG;EAAE,cAAc,EAAE;AAAkB,CAAC;AACrD,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,MAGa/V,qBAAqB;EAEhCxB,YAAoBwX,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvC3M,GAAGA,CAAC3J,KAAU;IACZ,OAAO,IAAI,CAACsW,IAAI,CAAC3M,GAAG,CAAQ,GAAG0M,OAAO,IAAIrW,KAAK,EAAE,CAAC;EACpD;EAEAwQ,MAAMA,CAAC7I,IAAS;IACd,OAAO,IAAI,CAAC2O,IAAI,CAACC,IAAI,CAACF,OAAO,EAAE1O,IAAI,CAAC;EACtC;EAEAuC,MAAMA,CAAChD,EAAO,EAAES,IAAS;IACvB,OAAO,IAAI,CAAC2O,IAAI,CAACE,GAAG,CAAC,GAAGH,OAAO,IAAInP,EAAE,EAAE,EAAES,IAAI,EAAC;MAACyO;IAAO,CAAC,CAAC;EAC1D;EAEA5N,MAAMA,CAACtB,EAAO;IACZ,OAAO,IAAI,CAACoP,IAAI,CAAC9N,MAAM,CAAC,GAAG6N,OAAO,IAAInP,EAAE,EAAE,CAAC;EAC7C;;AAlBW5G,qBAAqB;mBAArBA,qBAAqB,EAAApD,sDAAA,CAAAJ,4DAAA;AAAA;AAArBwD,qBAAqB;SAArBA,qBAAqB;EAAAwW,OAAA,EAArBxW,qBAAqB,CAAAyW,IAAA;EAAAC,UAAA,EAFpB;AAAM;;;;;;;;;;;;;;;ACTpB;AACA;AACA;AAEO,MAAMC,WAAW,GAAG;EACzBC,UAAU,EAAE;CACb;AAED;;;;;;AAMA;;;;;;;;;;;;;;;;ACd+C;AAGF;AACY;AAEzD,IAAID,6EAAsB,EAAE;EAC1BE,6DAAc,EAAE;;AAGlBC,sEAAA,EAAwB,CAACE,eAAe,CAAC7T,sDAAS,CAAC,CAChD8T,KAAK,CAACC,GAAG,IAAI9X,OAAO,CAACC,GAAG,CAAC6X,GAAG,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/side-nav/side-nav.component.ts","./src/app/components/side-nav/side-nav.component.html","./src/app/components/tasks/task-card/task-card.component.ts","./src/app/components/tasks/task-card/task-card.component.html","./src/app/components/tasks/task-card/edit-task-dialog.html","./src/app/components/tasks/task-card/delete-task-dialog.html","./src/app/components/tasks/task-dashboard/task-dashboard.component.ts","./src/app/components/tasks/task-dashboard/task-dashboard.component.html","./src/app/components/tasks/task-dashboard/add-task-dialog.html","./src/app/components/users/log-in/log-in.component.ts","./src/app/components/users/log-in/log-in.component.html","./src/app/components/users/profile/profile.component.ts","./src/app/components/users/profile/profile.component.html","./src/app/components/users/profile/delete-user-dialog.html","./src/app/components/users/sign-in/sign-in.component.ts","./src/app/components/users/sign-in/sign-in.component.html","./src/app/services/tasks/task.service.ts","./src/app/services/users/authentication.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TaskCardComponent } from './components/tasks/task-card/task-card.component';\r\nimport {ProfileComponent} from './components/users/profile/profile.component';\r\nimport {LogInComponent} from './components/users/log-in/log-in.component';\r\nimport {TaskDashboardComponent} from './components/tasks/task-dashboard/task-dashboard.component';\r\nimport {SignInComponent} from './components/users/sign-in/sign-in.component';\r\nimport {SideNavComponent} from './components/side-nav/side-nav.component';\r\n\r\nlet routes: Routes = [\r\n    { path: '', redirectTo:'home',pathMatch:'full' },\r\n    { path: 'home', component: LogInComponent },\r\n    { path: 'sign-in', component: SignInComponent },\r\n    { path: 'nav', component: SideNavComponent },\r\n    { path: 'tasks/:username', component: TaskDashboardComponent },\r\n    { path: 'profile', component: ProfileComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes,{ onSameUrlNavigation: 'reload' })],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n  cashedUser:string;\r\n}\r\nexport const routingComponents = [TaskCardComponent,LogInComponent,TaskDashboardComponent]\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {AuthenticationService} from './services/users/authentication.service';\r\nimport {routingComponents} from './app-routing.module';\r\nimport {IUser} from './model/user.model';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  navigationIndex: string;\r\n  cashedUsername:string='';\r\n  cashedEmail:string='';\r\n  cashedAvatar:string='';\r\n  protected routes: Router;\r\n\r\n  constructor(protected _router: Router, private _authenticationService : AuthenticationService) {\r\n    //this.pages = this._router.getCurrentNavigation().id;\r\n    //localStorage.setItem(\"cashedUsername\", '');\r\n\r\n    this._router.events.subscribe((e) => {\r\n\r\n      this.cashedUsername = localStorage.getItem(\"cashedUsername\");\r\n      this.cashedEmail = localStorage.getItem(\"cashedEmail\");\r\n      this.cashedAvatar = localStorage.getItem(\"cashedAvatar\");\r\n\r\n      if (e instanceof NavigationEnd) {\r\n        this.navigationIndex = e.url;\r\n\r\n        console.log(e.url);\r\n        console.log(this.cashedUsername);\r\n\r\n        //initial redirect\r\n        if((this.cashedUsername=='' || !this.cashedUsername) && e.url!='/sign-in'){\r\n          this.navigationIndex = '/home';\r\n        }\r\n        //if user is logged in (cashed) don't let him see login page\r\n        else if((this.cashedUsername!='' && this.cashedUsername) && (e.url != '/tasks/'+this.cashedUsername && e.url !='/profile')){\r\n          // window.addEventListener(\"beforeunload\", function (e) {\r\n          //   e.returnValue = \"\\o/\";     // Gecko, Trident, Chrome 34+\r\n          // });\r\n          //this.navigationIndex = '/tasks/'+this.cashedUser;\r\n          this._router.navigateByUrl(`/tasks/${this.cashedUsername}`);\r\n        }\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  logout(){\r\n    localStorage.setItem(\"cashedUsername\", \"\");\r\n    this._router.navigateByUrl(`/home`);\r\n  }\r\n\r\n  authorized(user:IUser){\r\n    //cash user to save login\r\n    localStorage.setItem(\"cashedUsername\", user.userName);\r\n    localStorage.setItem(\"cashedEmail\", user.email);\r\n    localStorage.setItem(\"cashedPassword\", user.password);\r\n\r\n    this._router.navigateByUrl(`/tasks/${user.userName}`);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  protected readonly routingComponents = routingComponents;\r\n}\r\n","<mat-toolbar  class=\"top\">\r\n  <mat-panel-title class=\"top-title\"> TO-DO-LIST APPLICATION</mat-panel-title>\r\n\r\n\r\n  <button *ngIf=\"_router.url=='/tasks/'+cashedUsername\" disableRipple=\"true\" class=\"top-menu\" mat-button [matMenuTriggerFor]=\"menu\">\r\n    <mat-card-header>\r\n      <img  src=\"/assets/avatar.png\" mat-card-avatar class=\"example-header-image\" alt=\"\">\r\n      <mat-card-title>{{cashedUsername}}</mat-card-title>\r\n    </mat-card-header>\r\n  </button>\r\n  <mat-menu class=\"menu-list\" #menu=\"matMenu\" xPosition=\"after\">\r\n    <mat-card-header>\r\n      <img src=\"/assets/avatar.png\" mat-card-avatar class=\"example-header-image\" alt=\"\">\r\n      <mat-card-title>{{cashedUsername|uppercase}}</mat-card-title>\r\n      <mat-card-subtitle>{{cashedEmail}}</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-divider></mat-divider>\r\n    <mat-card-footer>\r\n      <ng-template matMenuContent>\r\n        <button  class=\"top-btn\" routerLink=\"/profile\" mat-menu-item><mat-icon class=\"top-icon\">account_circle</mat-icon> View Profile</button>\r\n        <button class=\"top-btn\" (click)=\"logout()\"  mat-menu-item><mat-icon class=\"top-icon\">exit_to_app</mat-icon> Log off</button>\r\n      </ng-template>\r\n    </mat-card-footer>\r\n  </mat-menu>\r\n\r\n</mat-toolbar>\r\n\r\n<mat-nav-list [ngSwitch]=\"navigationIndex\">\r\n  <sign-in *ngSwitchCase=\"'/sign-in'\" (loggedIn)=\"authorized($event)\"></sign-in>\r\n  <log-in *ngSwitchCase=\"'/home'\" (loggedIn)=\"authorized($event)\"></log-in>\r\n  <side-nav *ngSwitchDefault></side-nav>\r\n</mat-nav-list>\r\n\r\n\r\n<!--<button [style]=\"'margin:10px;background-color:green;'\">+ Add Task</button>-->\r\n\r\n<!--<div>-->\r\n\r\n<!--&lt;!&ndash;  <div class=\"tasks\">&ndash;&gt;-->\r\n\r\n<!--      <div class=\"categories\">-->\r\n\r\n<!--          <div class=\"column-category\">-->\r\n<!--            <div class=\"mat-headline-4\">To do</div>-->\r\n<!--                    <task-card></task-card>-->\r\n<!--          </div>-->\r\n\r\n<!--          <div class=\"vl\"></div>-->\r\n\r\n<!--          <div class=\"column-category\">-->\r\n<!--            <div class=\"mat-headline-4\">Doing</div>-->\r\n<!--              <ng-container class=\"tasks\" *ngFor=\"let task of tasks\">-->\r\n<!--                  <task-card [task]=\"task\" *ngIf=\"task.category=='INTERMEDIATE'\"></task-card>-->\r\n<!--              </ng-container>-->\r\n<!--          </div>-->\r\n\r\n<!--          <div class=\"vl\"></div>-->\r\n\r\n<!--          <div class=\"column-category\">-->\r\n<!--            <div class=\"mat-headline-4\">Done</div>-->\r\n<!--              <ng-container class=\"tasks\" *ngFor=\"let task of tasks\">-->\r\n<!--                  <task-card [task]=\"task\" *ngIf=\"task.category=='ADVANCED'\"></task-card>-->\r\n<!--              </ng-container>-->\r\n<!--          </div>-->\r\n\r\n<!--      </div>-->\r\n\r\n<!--&lt;!&ndash;    <task-card [task]=\"task\">&ndash;&gt;-->\r\n\r\n<!--&lt;!&ndash;&lt;!&ndash;      <task-image [src]=\"task.iconUrl\"></task-image>&ndash;&gt;&ndash;&gt;-->\r\n\r\n<!--&lt;!&ndash;    </task-card>&ndash;&gt;-->\r\n\r\n<!--&lt;!&ndash;  </div>&ndash;&gt;-->\r\n\r\n\r\n<!--</div>-->\r\n\r\n\r\n\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {DeleteTaskDialog, EditTaskDialog, TaskCardComponent} from './components/tasks/task-card/task-card.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {TaskService} from './services/tasks/task.service';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {RouteReuseStrategy, RouterLink, RouterModule} from '@angular/router';\r\nimport {RouterTestingModule} from '@angular/router/testing';\r\nimport {AppRoutingModule, routingComponents} from './app-routing.module';\r\nimport { LogInComponent } from './components/users/log-in/log-in.component';\r\nimport { SignInComponent } from './components/users/sign-in/sign-in.component';\r\nimport {DeleteUserDialog, ProfileComponent} from './components/users/profile/profile.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport { SideNavComponent } from './components/side-nav/side-nav.component';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {AddTaskDialog, TaskDashboardComponent} from './components/tasks/task-dashboard/task-dashboard.component';\r\nimport {CdkDrag, CdkDropList, DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {MAT_DIALOG_DEFAULT_OPTIONS, MatDialogModule, MatDialogRef} from '@angular/material/dialog';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatOptionModule} from '@angular/material/core';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddTaskDialog,\r\n    AppComponent,\r\n    routingComponents,\r\n    LogInComponent,\r\n    SignInComponent,\r\n    ProfileComponent,\r\n    SideNavComponent,\r\n    TaskDashboardComponent,\r\n    DeleteTaskDialog,\r\n    EditTaskDialog,\r\n    TaskCardComponent,\r\n    LogInComponent,\r\n    SignInComponent,\r\n    DeleteUserDialog\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    RouterLink,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatCheckboxModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    CdkDropList,\r\n    CdkDrag,\r\n    DragDropModule,\r\n    MatDialogModule,\r\n    MatRadioModule,\r\n    MatOptionModule,\r\n    MatSelectModule,\r\n    CdkTableModule,\r\n    MatMenuModule,\r\n    MatExpansionModule,\r\n    MatSnackBarModule,\r\n    MatPaginatorModule,\r\n    MatGridListModule,\r\n    MatChipsModule,\r\n    MatProgressBarModule\r\n  ],\r\n  providers: [TaskService,{provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: true}}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n","import {Component, EventEmitter, Output, ViewChild} from '@angular/core';\r\nimport {ITask} from '../../model/task.model';\r\nimport {AuthenticationService} from '../../services/users/authentication.service';\r\nimport {Router, Routes} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n  styleUrls: ['./side-nav.component.css']\r\n})\r\nexport class SideNavComponent {\r\n  isActive: any;\r\n  hide = true;\r\n  user:string = localStorage.getItem('cashedUsername');\r\n\r\n\r\n\r\n  constructor(private _authenticationService : AuthenticationService, private _routes: Router) {}\r\n\r\n  //remove default routes from array (slice first 4) + replace \"tasks/:username\" by tasks/this.user to focus correct route\r\n  protected readonly routes =  [this._routes.config.slice(4)[0].path.split(':')[0]+this.user,this._routes.config.slice(4)[1].path];\r\n\r\n  protected readonly console = console;\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n    <mat-sidenav #sidenav mode=\"push\" class=\"nav\" >\r\n\r\n        <mat-nav-list class=\"nav-list\" *ngFor=\"let route of routes; index as i\">\r\n\r\n          <mat-list-item class=\"nav-item\" [routerLink]=\"route\" routerLinkActive=\"focus\">\r\n            <h3 class=\"nav-header\" routerLinkActive=\"active\" [ngSwitch]=\"i\">\r\n              <!--       Task       -->\r\n              <mat-icon *ngSwitchCase=\"0\" class=\"nav-icon\">dashboard</mat-icon>\r\n              <!--       Profile       -->\r\n              <mat-icon *ngSwitchCase=\"1\" class=\"nav-icon\">account_circle</mat-icon>\r\n\r\n              {{route.split('/')[0] | titlecase}}\r\n            </h3>\r\n          </mat-list-item>\r\n\r\n<!--            <mat-list-item class=\"nav-item\" routerLink=\"/tasks\" routerLinkActive=\"focus\">-->\r\n<!--                <h3 class=\"nav-header\" routerLinkActive=\"active\"><mat-icon class=\"nav-icon\">dashboard</mat-icon> Tasks</h3>-->\r\n<!--            </mat-list-item>-->\r\n\r\n<!--            <mat-list-item class=\"nav-item\" routerLink=\"/profile\" routerLinkActive=\"focus\">-->\r\n<!--                <h3 class=\"nav-header\" routerLinkActive=\"active\"><mat-icon class=\"nav-icon\" >account_circle</mat-icon> User</h3>-->\r\n<!--            </mat-list-item>-->\r\n\r\n        </mat-nav-list>\r\n\r\n    </mat-sidenav>\r\n\r\n\r\n\r\n    <mat-sidenav-content>\r\n        <div class=\"content-container\">\r\n            <button [class.open]=\"sidenav.opened\"  class=\"nav-button\" type=\"button\" mat-button (click)=\"sidenav.toggle()\">\r\n                <p class=\"nav-icon\"><mat-icon>apps</mat-icon></p>\r\n            </button>\r\n          <router-outlet></router-outlet>\r\n        </div>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import {\r\n    AfterContentInit,\r\n    AfterViewInit,\r\n    Component,\r\n    ContentChildren,\r\n    ElementRef,\r\n    EventEmitter, Inject,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n    QueryList,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport {ITask} from '../../../model/task.model';\r\nimport {TaskService} from '../../../services/tasks/task.service';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {AddTaskDialog} from '../task-dashboard/task-dashboard.component';\r\nimport {SubscriptionLike} from 'rxjs';\r\nimport {subscriptionLogsToBeFn} from 'rxjs/internal/testing/TestScheduler';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {take} from 'rxjs/operators';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n    selector: 'task-card',\r\n    templateUrl: './task-card.component.html',\r\n    styleUrls: ['./task-card.component.css']\r\n})\r\nexport class TaskCardComponent implements OnInit {\r\n    @Input()\r\n    task : ITask;\r\n\r\n    update : SubscriptionLike;\r\n    uTask : ITask;\r\n\r\n    @Output()\r\n    refreshTasks = new EventEmitter<ITask[]>();\r\n\r\n    getTask:SubscriptionLike;\r\n\r\n    constructor(private _taskService: TaskService,public dialog: MatDialog) {}\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    deleteTask(){\r\n        this.dialog.open(DeleteTaskDialog, {\r\n          disableClose:true,\r\n            data: { id : this.task.id }\r\n        }).afterClosed().subscribe(()=>{\r\n            this.refreshTasks.emit();\r\n        });\r\n    }\r\n\r\n    updateTask() {\r\n\r\n      this.dialog.open(EditTaskDialog, {\r\n        disableClose:true,\r\n        data: this.task,\r\n      }).afterClosed().subscribe(()=>{\r\n        this.refreshTasks.emit();\r\n      });\r\n    }\r\n\r\n  protected readonly window = window;\r\n}\r\n\r\n@Component({\r\n    selector: 'delete-task-dialog',\r\n    templateUrl: './delete-task-dialog.html',\r\n    styleUrls: ['./task-card.component.css']\r\n})\r\nexport class DeleteTaskDialog {\r\n\r\n    deleteTask: SubscriptionLike;\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<AddTaskDialog>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _taskService: TaskService,\r\n        private _snackBar: MatSnackBar)\r\n    {}\r\n\r\n    ngOnInit(){}\r\n\r\n    ngOnDestroy(){\r\n        if(this.deleteTask){\r\n            this.deleteTask.unsubscribe();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onConfirm(){\r\n        this.deleteTask = this._taskService.delete(this.data.id).subscribe((result)=>{\r\n          let snackBarRef = this._snackBar.open(`Task #${this.data.id} Deleted`, 'Dismiss', {duration:1000});\r\n            console.log(\"TASK DELETED: \", result);\r\n            this.onNoClick();\r\n        });\r\n    }\r\n\r\n    onNoClick(){\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n\r\n@Component({\r\n  selector: 'edit-task-dialog',\r\n  templateUrl: 'edit-task-dialog.html',\r\n  styleUrls: ['../task-dashboard/task-dashboard.component.css']\r\n})\r\nexport class EditTaskDialog {\r\n\r\n  //form definition & input validation\r\n  task = new FormGroup({\r\n    title: new FormControl(null,Validators.minLength(5)),\r\n    description: new FormControl(null,Validators.minLength(10)),\r\n    longDescription: new FormControl(null,Validators.minLength(10)),\r\n    status: new FormControl(null,Validators.required),\r\n    //fetching username to create correct task data\r\n    username: new FormControl(),\r\n    priority: new FormControl(null,Validators.required),\r\n  });\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddTaskDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: ITask,\r\n    private _taskService: TaskService,\r\n  private _snackBar: MatSnackBar)\r\n  {}\r\n\r\n\r\n  getLatest: SubscriptionLike;\r\n  updateTask: SubscriptionLike;\r\n  isUpdated: SubscriptionLike;\r\n  latestId: number;\r\n  disabled= false;\r\n\r\n  ngOnInit() {\r\n    //get this user's latest task (+1 = current task number)\r\n    // this.getLatest = this._taskService.findLatest('{\"username\":\"Yassine\"}')\r\n    //   .subscribe(d => this.latestId = d+1);\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.updateTask){\r\n      this.updateTask.unsubscribe();\r\n    }\r\n    if(this.isUpdated){\r\n      this.isUpdated.unsubscribe();\r\n    }\r\n  }\r\n\r\n  isDiff(){\r\n    this.isUpdated = this._taskService.get(this.data.id).pipe(take(1))\r\n      .subscribe((result)=> {\r\n        console.log(JSON.stringify(result) === JSON.stringify(this.data));\r\n          this.disabled = JSON.stringify(result) !== JSON.stringify(this.data);\r\n        });\r\n      }\r\n\r\n\r\n  isValid(){\r\n    return this.task.valid && this.disabled;\r\n  }\r\n\r\n  onSubmit(){\r\n    this.updateTask = this._taskService.update(this.data.id,this.data)\r\n      .subscribe((result)=> {\r\n        let snackBarRef = this._snackBar.open(`Task #${this.data.id} Updated`, 'Dismiss', {duration:1000});\r\n        console.log(\"THIS TASK HAS BEEN UPDATED: \",result);\r\n      });\r\n  }\r\n\r\n\r\n  onNoClick(): void {\r\n    //console.log(this.task);\r\n    let dec= true;\r\n    //if no changes no need to confirm\r\n    if(this.disabled) {\r\n      dec = window.confirm(\"Are you sure you want to leave? Any changes will not be saved!\");\r\n    }\r\n    if(dec) {\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n}\r\n\r\n","\r\n<div class=\"task-card\" *ngIf=\"task\" #container>\r\n\r\n\r\n  <div [ngSwitch]=\"task.priority\" class=\"task-priority\">\r\n    <mat-icon style=\"color: red\" *ngSwitchCase=\"'high'\">warning</mat-icon>\r\n\r\n    <mat-icon style=\"color: orange\"  *ngSwitchCase=\"'medium'\">priority_high</mat-icon>\r\n\r\n    <mat-icon style=\"color: green\"  *ngSwitchCase=\"'low'\">low_priority</mat-icon>\r\n  </div>\r\n\r\n  <button mat-button-flat class=\"delete\" (click)=\"deleteTask()\"><mat-icon>clear</mat-icon></button>\r\n  <a href=\"#\" onclick=\"return false;\" (click)=\"updateTask()\" class=\"task-id\">\r\n    {{\"#\"+task.id }}\r\n  </a>\r\n  <div class=\"task-title\">\r\n    {{ task.title }}\r\n  </div>\r\n<!--  <img width=\"300\" alt=\"Angular Logo\"-->\r\n<!--       [src]=\"task.iconUrl\">-->\r\n\r\n<!--  <ng-content select=\"task-image\"-->\r\n<!--              *ngIf=\"task.iconUrl\"></ng-content>-->\r\n\r\n  <div class=\"task-description\">\r\n{{ task.description }}\r\n<!--    Edit Title: <input #taskTitle [value]=\"task.description\">-->\r\n\r\n  </div>\r\n\r\n\r\n\r\n<!--  <button (click)=\"onSaveClicked(taskTitle.value)\" [style]=\"'background-color:green;'\">See Details</button>-->\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div class=\"dialog\">\r\n  <h1 mat-dialog-title>Updating Task</h1>\r\n  <div mat-dialog-content class=\"content\">\r\n    <h4 class=\"task-id\"> Task {{\"#\"+data.id }}</h4>\r\n    <form [formGroup]=\"task\" (change)=\"isDiff()\">\r\n      <div>\r\n        <mat-label>Status: </mat-label>\r\n        <mat-radio-group formControlName=\"status\" [(ngModel)]=\"data.status\" (change)=\"isDiff()\">\r\n          <mat-radio-button color=\"primary\" value=\"TO DO\">TO DO</mat-radio-button>\r\n          <mat-radio-button color=\"primary\" value=\"DOING\">DOING</mat-radio-button>\r\n          <mat-radio-button color=\"primary\" value=\"DONE\">DONE</mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n      <div class=\"text-input\">\r\n        <mat-label>Title: </mat-label>\r\n        <mat-form-field>\r\n          <input matInput [(ngModel)]=\"data.title\" #title formControlName=\"title\" maxlength=\"10\" placeholder=\"Title\" required>\r\n          <mat-hint>{{title.value?.length || 0}}/10</mat-hint>\r\n          <mat-error> Minimum Required characters {{title.value?.length || 0}}/5 </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-label>Description: </mat-label>\r\n        <mat-form-field>\r\n          <textarea matInput [(ngModel)]=\"data.description\" #description formControlName=\"description\" maxlength=\"20\" placeholder=\"Description\" required></textarea>\r\n          <mat-hint>{{description.value?.length || 0}}/20</mat-hint>\r\n          <mat-error> Minimum Required characters {{description.value?.length || 0}}/10 </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-label>Long Description: </mat-label>\r\n        <mat-form-field>\r\n          <textarea matInput [(ngModel)]=\"data.longDescription\" #longDescription formControlName=\"longDescription\" maxlength=\"100\" placeholder=\"Long Description\" required></textarea>\r\n          <mat-hint>{{longDescription.value?.length || 0}}/100</mat-hint>\r\n          <mat-error> Minimum Required characters {{longDescription.value?.length || 0}}/20 </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-label>Priority: </mat-label>\r\n        <mat-form-field>\r\n          <mat-select placeholder=\"Priority\" [(ngModel)]=\"data.priority\" formControlName=\"priority\" (selectionChange)=\"isDiff()\"  required>\r\n            <mat-option value=\"high\">High</mat-option>\r\n            <mat-option value=\"medium\">Medium</mat-option>\r\n            <mat-option value=\"low\">Low</mat-option>\r\n          </mat-select>\r\n          <mat-error> Required Selection </mat-error>\r\n        </mat-form-field>\r\n\r\n        <div class=\"task-time\">\r\n        <mat-label>Created At: </mat-label>\r\n          <span>{{data.createdAt|date:'MMM, dd yyyy @ hh:mm a'}}</span>\r\n        </div>\r\n\r\n        <div class=\"task-time\">\r\n        <mat-label>Last Updated At: </mat-label>\r\n        <span>{{data.updatedAt|date:'MMM, dd yyyy @ hh:mm a'}}</span>\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n    <div mat-dialog-actions class=\"add-buttons\">\r\n      <button type=\"submit\" (click)=\"onSubmit()\" [disabled]=\"!isValid()\" class=\"confirm\" mat-button [mat-dialog-close]=\"task\">Edit Task</button>\r\n      <mat-error *ngIf=\"!disabled\">No Changes!</mat-error>\r\n      <button class=\"leave\" mat-button (click)=\"onNoClick()\" >Go Back</button>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","<div>\r\n    <div mat-dialog-title class=\"task-id\">Deleting Task {{\"#\"+data.id}}</div>\r\n    <div mat-dialog-content>\r\n        <p class=\"delete-message\">Are you sure you want to delete this task?</p>\r\n    </div>\r\n    <div mat-dialog-actions class=\"add-buttons\">\r\n        <button  class=\"delete-btn\" mat-button (click)=\"onConfirm()\" >Delete Task</button>\r\n        <button class=\"leave\" mat-button (click)=\"onNoClick()\">Go Back</button>\r\n    </div>\r\n</div>\r\n","import {Component, EventEmitter, Inject, OnInit, Output} from '@angular/core';\r\nimport {TaskService} from '../../../services/tasks/task.service';\r\nimport { ITask} from '../../../model/task.model';\r\nimport {CdkDragDrop, transferArrayItem} from '@angular/cdk/drag-drop';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {timeout} from 'rxjs/operators';\r\nimport {SubscriptionLike} from 'rxjs';\r\nimport {validator} from 'sequelize/types/utils/validator-extras';\r\nimport {style} from '@angular/animations';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {PageEvent} from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'task-dashboard',\r\n  templateUrl: './task-dashboard.component.html',\r\n  styleUrls: ['./task-dashboard.component.css']\r\n})\r\nexport class TaskDashboardComponent {\r\n\r\n  username:string;\r\n  todo : ITask[] = [];\r\n  inProgress: ITask[] = [];\r\n  done: ITask[] = [];\r\n\r\n  allTasks: ITask[] = [];\r\n\r\n  limit: number = 6;\r\n  index: number = 0;\r\n\r\n  //observer subscriptions\r\n  getTasks: SubscriptionLike;\r\n  dialogRef: SubscriptionLike;\r\n  sub: SubscriptionLike;\r\n\r\n\r\n  handlePageEvent(e: PageEvent) {\r\n    console.log(e.pageIndex);\r\n    this.limit = e.pageSize;\r\n    this.index = e.pageIndex;\r\n    this.getAllTasks();\r\n  }\r\n\r\n\r\n  showEmpty:boolean = true;\r\n\r\n  constructor(private _taskService: TaskService,public dialog: MatDialog,private route: ActivatedRoute,private _snackBar: MatSnackBar) {\r\n    this.getAllTasks();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.username = params['username'];\r\n      console.log(this.username);\r\n    });\r\n    this.getAllTasks();\r\n  }\r\n\r\n  hidingEmpty(){\r\n    this.showEmpty = false;\r\n  }\r\n\r\n  getAllTasks(){\r\n    this.getTasks = this._taskService.getAll()\r\n        .subscribe(data => {\r\n          this.allTasks = data.filter(d => d.username == this.username);\r\n          console.log('todo',this.todo.length);\r\n          console.log('inprogress',this.inProgress.length);\r\n          console.log('done',this.done);\r\n          this.todo = data.filter(d => d.status == 'TO DO' && d.username == this.username);\r\n          this.inProgress = data.filter(d => d.status == 'DOING' && d.username == this.username);\r\n          this.done = data.filter(d => d.status == 'DONE' && d.username == this.username);\r\n\r\n          this.todo = data.filter(d => d.status == 'TO DO' && d.username == this.username).slice(this.limit == 3 ? (this.todo.length <= 1 ? 0 : -1 - this.index) : (this.todo.length <= 2 ? 0 : -2 - this.index * 2), this.limit === 3 ? this.todo.length - this.index  : this.todo.length - this.index * 2);\r\n          this.inProgress = data.filter(d => d.status == 'DOING' && d.username == this.username).slice(this.limit === 3 ? (this.inProgress.length <= 1 ? 0 : -1 - this.index) : (this.inProgress.length <= 2 ? 0 : -2 - this.index * 2), this.limit === 3 ? this.inProgress.length - this.index  : this.inProgress.length - this.index * 2);\r\n          this.done = data.filter(d => d.status == 'DONE' && d.username == this.username).slice(this.limit === 3 ? (this.done.length <= 1 ? 0 : -1 - this.index ) : (this.done.length <= 2 ? 0 : -2 - this.index * 2), this.limit === 3 ? this.done.length - this.index  : this.done.length - this.index * 2);\r\n\r\n        });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.getTasks){\r\n      this.getTasks.unsubscribe();\r\n    }\r\n    if(this.dialogRef){\r\n      this.dialogRef.unsubscribe();\r\n    }\r\n    if(this.sub){\r\n      this.dialogRef.unsubscribe();\r\n    }\r\n  }\r\n\r\n  editTask(event: CdkDragDrop<ITask[]>, task: ITask) {\r\n    console.log(\"came from here : \"+ event.previousContainer.id);\r\n    console.log(\"came to here : \"+ event.container.id);\r\n    if (event.previousContainer !== event.container) {\r\n      let snackBarRef = this._snackBar.open(`Task #${task.id} Updated`, 'Dismiss', {duration:1000});\r\n\r\n      this.sub = this._taskService.update(task.id,'{\"status\":\"'+ event.container.id+'\"}')\r\n          .subscribe(() =>  { this.getAllTasks();});\r\n    }\r\n\r\n  }\r\n\r\n  refreshTasks(){\r\n    this.getAllTasks();\r\n  }\r\n\r\n  drop(event: CdkDragDrop<ITask[]>): void {\r\n    if (event.previousContainer === event.container) {\r\n      return;\r\n    }\r\n    if (!event.container.data || !event.previousContainer.data) {\r\n      return;\r\n    }\r\n    transferArrayItem(\r\n        event.previousContainer.data,\r\n        event.container.data,\r\n        event.previousIndex,\r\n        event.currentIndex\r\n    );\r\n    this.showEmpty = true;\r\n  }\r\n\r\n  openDialog(): void {\r\n    this.dialogRef = this.dialog.open(AddTaskDialog, {\r\n      data: {username: this.username},\r\n      disableClose:true\r\n      })\r\n        .afterClosed().subscribe(()=>{this.getAllTasks();});\r\n  }\r\n\r\n  protected readonly window = window;\r\n  protected readonly ondragenter = ondragenter;\r\n}\r\n\r\n@Component({\r\n  selector: 'add-task-dialog',\r\n  templateUrl: 'add-task-dialog.html',\r\n  styleUrls: ['./task-dashboard.component.css']\r\n})\r\nexport class AddTaskDialog {\r\n\r\n  //form definition & input validation\r\n  task = new FormGroup({\r\n    title: new FormControl(null,Validators.minLength(5)),\r\n    description: new FormControl(null,Validators.minLength(10)),\r\n    longDescription: new FormControl(null,Validators.minLength(10)),\r\n    status: new FormControl('TO DO',Validators.required),\r\n    priority: new FormControl(null,Validators.required),\r\n    //fetching username to create correct task data\r\n    username: new FormControl(this.data.username),\r\n  });\r\n\r\n    constructor(\r\n      public dialogRef: MatDialogRef<AddTaskDialog>,\r\n      @Inject(MAT_DIALOG_DATA) public data: any,\r\n      private _taskService: TaskService,\r\n      private _snackBar: MatSnackBar)\r\n  {}\r\n\r\n\r\n  getLatest: SubscriptionLike;\r\n  createTask: SubscriptionLike;\r\n  latestId: number;\r\n\r\n  ngOnInit() {\r\n    //get this user's latest task (+1 = current task number)\r\n    console.log(this.data.username);\r\n    this.getLatest = this._taskService.findLatest(`{\"username\":\"${this.data.username}\"}`)\r\n        .subscribe(d => this.latestId = d.length+1);\r\n  }\r\n\r\n\r\n  ngOnDestroy(){\r\n    if(this.getLatest){\r\n      this.getLatest.unsubscribe();\r\n    }\r\n    if(this.createTask){\r\n      this.createTask.unsubscribe();\r\n    }\r\n  }\r\n\r\n  isValid(){\r\n    return this.task.valid;\r\n  }\r\n\r\n  onSubmit(){\r\n    this.createTask = this._taskService.create(this.task.value)\r\n        .subscribe((result)=> {\r\n          let snackBarRef = this._snackBar.open(`Task #${result.id} Created`, 'Dismiss', {duration:1000});\r\n          console.log(\"THIS TASK HAS BEEN CREATED: \",result);\r\n        });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    //console.log(this.task);\r\n    let dec = window.confirm(\"Are you sure you want to leave? Any changes will not be saved!\");\r\n    if(dec) {\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<button mat-button class=\"add\" (click)=\"openDialog()\"> <mat-icon>add</mat-icon> Add Task</button>\r\n<!--SHOW DIALOG ON BUTTON CLICK-->\r\n\r\n<div class=\"dashboard\">\r\n\r\n    <div class=\"categories\">\r\n\r\n        <div class=\"column-category\">\r\n            <div [ngClass]=\"['mat-headline-3', 'category']\" >To do</div>\r\n            <mat-card\r\n                    cdkDropList\r\n                    id=\"TO DO\"\r\n                    #todoList=\"cdkDropList\"\r\n                    [cdkDropListData]=\"todo\"\r\n                    [cdkDropListConnectedTo]=\"[doneList, inProgressList]\"\r\n                    (cdkDropListDropped)=\"drop($event)\"\r\n                    (cdkDropListEntered)=\"hidingEmpty()\"\r\n                    class=\"list\">\r\n                <p class=\"empty-label\" *ngIf=\"todo.length === 0 && showEmpty\">Empty list</p>\r\n                <div *ngFor=\"let task of todo\" cdkDrag (cdkDragDropped)=\"editTask($event,task)\">\r\n                    <task-card class=\"task\" [task]=\"task\" (refreshTasks)=\"refreshTasks()\"></task-card>\r\n                  <div *ngIf=\"window.innerWidth < 700\" class=\"drag-handle\" cdkDragHandle>\r\n                    <svg width=\"24px\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path d=\"M10 9h4V6h3l-5-5-5 5h3v3zm-1 1H6V7l-5 5 5 5v-3h3v-4zm14 2l-5-5v3h-3v4h3v3l5-5zm-9 3h-4v3H7l5 5 5-5h-3v-3z\"></path>\r\n                      <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n            </mat-card>\r\n\r\n        </div>\r\n\r\n        <div class=\"vl\"></div>\r\n\r\n        <div class=\"column-category\">\r\n            <div [ngClass]=\"['mat-headline-3', 'category']\">Doing</div>\r\n            <mat-card\r\n                    cdkDropList\r\n                    id=\"DOING\"\r\n                    #inProgressList=\"cdkDropList\"\r\n                    [cdkDropListData]=\"inProgress\"\r\n                    [cdkDropListConnectedTo]=\"[todoList, doneList]\"\r\n                    (cdkDropListDropped)=\"drop($event)\"\r\n                    (cdkDropListEntered)=\"hidingEmpty()\"\r\n                    class=\"list\">\r\n                <p class=\"empty-label\" *ngIf=\"inProgress.length === 0 && showEmpty\">Empty list</p>\r\n                <div *ngFor=\"let task of inProgress\" cdkDrag (cdkDragDropped)=\"editTask($event,task)\">\r\n                    <task-card class=\"task\" [task]=\"task\" (refreshTasks)=\"refreshTasks()\"></task-card>\r\n                  <div *ngIf=\"window.innerWidth < 700\" class=\"drag-handle\" cdkDragHandle>\r\n                    <svg width=\"24px\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path d=\"M10 9h4V6h3l-5-5-5 5h3v3zm-1 1H6V7l-5 5 5 5v-3h3v-4zm14 2l-5-5v3h-3v4h3v3l5-5zm-9 3h-4v3H7l5 5 5-5h-3v-3z\"></path>\r\n                      <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n            </mat-card>\r\n<!--            <ng-container class=\"tasks\" *ngFor=\"let task of tasks\">-->\r\n<!--                <task-card [task]=\"task\" *ngIf=\"task.status=='DOING'\"></task-card>-->\r\n<!--            </ng-container>-->\r\n        </div>\r\n\r\n        <div class=\"vl\"></div>\r\n\r\n        <div class=\"column-category\">\r\n            <div [ngClass]=\"['mat-headline-3', 'category']\">Done</div>\r\n            <mat-card\r\n\r\n                    cdkDropList\r\n                    id=\"DONE\"\r\n                    #doneList=\"cdkDropList\"\r\n                    [cdkDropListData]=\"done\"\r\n                    [cdkDropListConnectedTo]=\"[todoList, inProgressList]\"\r\n                    (cdkDropListDropped)=\"drop($event)\"\r\n                    (cdkDropListEntered)=\"hidingEmpty()\"\r\n                    class=\"list\">\r\n\r\n                <p class=\"empty-label\" *ngIf=\"done.length === 0 && showEmpty\">Empty list</p>\r\n                <div class=\"drag\" *ngFor=\"let task of done\" cdkDrag (cdkDragDropped)=\"editTask($event,task)\">\r\n\r\n                    <task-card class=\"task\" [task]=\"task\" (refreshTasks)=\"refreshTasks()\"></task-card>\r\n\r\n                  <div *ngIf=\"window.innerWidth < 700\" class=\"drag-handle\" cdkDragHandle>\r\n                    <svg width=\"24px\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path d=\"M10 9h4V6h3l-5-5-5 5h3v3zm-1 1H6V7l-5 5 5 5v-3h3v-4zm14 2l-5-5v3h-3v4h3v3l5-5zm-9 3h-4v3H7l5 5 5-5h-3v-3z\"></path>\r\n                      <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                    </svg>\r\n                  </div>\r\n<!--                    <div class=\"test\">Slide Screen here!</div>-->\r\n                </div>\r\n            </mat-card>\r\n<!--            <ng-container class=\"tasks\" *ngFor=\"let task of tasks\">-->\r\n<!--                <task-card [task]=\"task\" *ngIf=\"task.status=='DONE'\"></task-card>-->\r\n<!--            </ng-container>-->\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n<mat-paginator class=\"paginator\" [length]=\"allTasks.length\"\r\n               (page)=\"handlePageEvent($event)\"\r\n               [pageSize]=\"6\"\r\n               [pageSizeOptions]=\"[3, 6]\"\r\n               aria-label=\"Select page\">\r\n</mat-paginator>\r\n<!--MODAL-->\r\n\r\n","<div class=\"dialog\">\r\n    <h1 mat-dialog-title>Create a Task</h1>\r\n    <div mat-dialog-content>\r\n        <h4 class=\"task-id\">Creating Task {{\"#\"+latestId }}</h4>\r\n        <form [formGroup]=\"task\">\r\n            <div>\r\n                <label>Status: </label>\r\n                <mat-radio-group formControlName=\"status\">\r\n                    <mat-radio-button color=\"primary\" value=\"TO DO\">TO DO</mat-radio-button>\r\n                    <mat-radio-button color=\"primary\" value=\"DOING\">DOING</mat-radio-button>\r\n                    <mat-radio-button color=\"primary\" value=\"DONE\">DONE</mat-radio-button>\r\n                </mat-radio-group>\r\n            </div>\r\n        <div class=\"text-input\">\r\n          <mat-form-field>\r\n            <input matInput #title formControlName=\"title\" maxlength=\"10\" placeholder=\"Title\" required>\r\n            <mat-hint>{{title.value?.length || 0}}/10</mat-hint>\r\n            <mat-error> Minimum Required characters {{title.value?.length || 0}}/5 </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <textarea matInput #description formControlName=\"description\" maxlength=\"20\" placeholder=\"Description\" required></textarea>\r\n            <mat-hint>{{description.value?.length || 0}}/20</mat-hint>\r\n            <mat-error> Minimum Required characters {{description.value?.length || 0}}/10 </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <textarea matInput #lonDescription formControlName=\"longDescription\" maxlength=\"100\" placeholder=\"Long Description\" required></textarea>\r\n            <mat-hint>{{lonDescription.value?.length || 0}}/100</mat-hint>\r\n            <mat-error> Minimum Required characters {{lonDescription.value?.length || 0}}/20 </mat-error>\r\n          </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-select placeholder=\"Priority\" formControlName=\"priority\" required>\r\n                    <mat-option value=\"high\">High</mat-option>\r\n                    <mat-option value=\"medium\">Medium</mat-option>\r\n                    <mat-option value=\"low\">Low</mat-option>\r\n                </mat-select>\r\n                <mat-error> Required Selection </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        </form>\r\n    </div>\r\n    <div mat-dialog-actions class=\"add-buttons\">\r\n        <button type=\"submit\" (click)=\"onSubmit()\" [disabled]=\"!isValid()\" class=\"confirm\" mat-button [mat-dialog-close]=\"task\">Add Task</button>\r\n        <button class=\"leave\" mat-button (click)=\"onNoClick()\" >Go Back</button>\r\n    </div>\r\n</div>\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {IUser} from '../../../model/user.model';\r\nimport {AuthenticationService} from '../../../services/users/authentication.service';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {SubscriptionLike} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'log-in',\r\n  templateUrl: './log-in.component.html',\r\n  styleUrls: ['./log-in.component.css']\r\n})\r\nexport class LogInComponent implements OnInit {\r\n\r\n  getUser:SubscriptionLike;\r\n  invalid= false;\r\n\r\n  user = new FormGroup({\r\n    email: new FormControl(null, Validators.pattern('^[^\\\\.\\\\s][\\\\w\\\\-]+(\\\\.[\\\\w\\\\-]+)*@([\\\\w-]+\\\\.)+[\\\\w-]{2,}$')),\r\n    password: new FormControl(null, Validators.required)\r\n  })\r\n\r\n  @Output()\r\n  loggedIn = new EventEmitter<any>();\r\n\r\n  @Output()\r\n  signedIn = new EventEmitter<any>();\r\n\r\n  constructor(private _authenticationService : AuthenticationService) {\r\n  }\r\n\r\n  reset(){\r\n    this.invalid = false;\r\n  }\r\n\r\n  logIn(user:any){\r\n    this.loggedIn.emit(user);\r\n  }\r\n\r\n  signIn(){\r\n    this.signedIn.emit();\r\n  }\r\n\r\n  checkUser(){\r\n    this.getUser = this._authenticationService.get(this.user.value.email).subscribe((res)=> {\r\n      if(this.user.value.password === res?.password){\r\n        this.logIn(res);\r\n      }else{\r\n        this.invalid = true;\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n   // this.getUser.unsubscribe();\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"login-container\">\r\n\r\n  <mat-card class=\"login-eyes\">\r\n    <div class=\"hit-area\">\r\n      <div class=\"hitbox\" id=\"a-1\"></div>\r\n      <div class=\"hitbox\" id=\"a-2\"></div>\r\n      <div class=\"hitbox\" id=\"a-3\"></div>\r\n      <div class=\"hitbox\" id=\"a-4\"></div>\r\n      <div class=\"hitbox\" id=\"a-5\"></div>\r\n      <div class=\"hitbox\" id=\"b-1\"></div>\r\n      <div class=\"hitbox\" id=\"b-2\"></div>\r\n      <div class=\"hitbox\" id=\"b-3\"></div>\r\n      <div class=\"hitbox\" id=\"b-4\"></div>\r\n      <div class=\"hitbox\" id=\"b-5\"></div>\r\n      <div class=\"hitbox\" id=\"c-1\"></div>\r\n      <div class=\"hitbox\" id=\"c-2\"></div>\r\n      <div class=\"hitbox\" id=\"c-3\"></div>\r\n      <div class=\"hitbox\" id=\"c-4\"></div>\r\n      <div class=\"hitbox\" id=\"c-5\"></div>\r\n      <div class=\"hitbox\" id=\"d-1\"></div>\r\n      <div class=\"hitbox\" id=\"d-2\"></div>\r\n      <div class=\"hitbox\" id=\"d-3\"></div>\r\n      <div class=\"hitbox\" id=\"d-4\"></div>\r\n      <div class=\"hitbox\" id=\"d-5\"></div>\r\n      <div class=\"hitbox\" id=\"e-1\"></div>\r\n      <div class=\"hitbox\" id=\"e-2\"></div>\r\n      <div class=\"hitbox\" id=\"e-3\"></div>\r\n      <div class=\"hitbox\" id=\"e-4\"></div>\r\n      <div class=\"hitbox\" id=\"e-5\"></div>\r\n\r\n      <div class=\"eye\">\r\n        <div class=\"pupil\"></div>\r\n      </div>\r\n      <div class=\"eye\">\r\n        <div class=\"pupil\"></div>\r\n      </div>\r\n      <div class=\"eyelid\"></div>\r\n      <div class=\"eyelid\"></div>\r\n\r\n    </div>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"login\">\r\n    <div class=\"login-card\">\r\n      <mat-card-content class=\"login-field\">\r\n          <form [formGroup]=\"user\" (change)=\"reset()\" style=\"text-align: center\">\r\n\r\n              <h2 class=\"title\">Log In</h2>\r\n              <mat-error *ngIf=\"invalid\" class=\"login-error\" style=\"padding-bottom: 20px\"> The username and password were not recognised </mat-error>\r\n\r\n              <div>\r\n              <mat-form-field class=\"full-width-input\">\r\n                  <input matInput placeholder=\"Email\" formControlName=\"email\" required>\r\n                  <mat-error> Please provide a valid email address </mat-error>\r\n              </mat-form-field>\r\n              </div>\r\n            <div>\r\n              <mat-form-field class=\"full-width-input\">\r\n                  <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\" required>\r\n                  <mat-error> Please provide a valid password </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n              <button type=\"submit\" (click)=\"checkUser()\" class=\"login-btn\" mat-raised-button color=\"primary\">Login</button>\r\n              <span>Don't have an account? <a class=\"sign-in\" (click)=\"signIn()\" routerLink=\"/sign-in\">Sign In</a></span>\r\n          </form>\r\n      </mat-card-content>\r\n    </div>\r\n  </mat-card>\r\n  </div>\r\n\r\n\r\n","import {Component, Inject} from '@angular/core';\r\nimport {AuthenticationService} from '../../../services/users/authentication.service';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {TaskService} from '../../../services/tasks/task.service';\r\nimport {ITask} from '../../../model/task.model';\r\nimport {SubscriptionLike} from 'rxjs';\r\nimport {take} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {AddTaskDialog} from '../../tasks/task-dashboard/task-dashboard.component';\r\nimport {IUser} from '../../../model/user.model';\r\nimport {EditTaskDialog} from '../../tasks/task-card/task-card.component';\r\n\r\n@Component({\r\n  selector: 'profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent {\r\n\r\n  userP:IUser;\r\n\r\n  edit: boolean = false;\r\n  disabled: boolean = false;\r\n  hide1 = true;\r\n  hide2 = true;\r\n\r\n  username:string = '';\r\n  email:string = '';\r\n  password:string = '';\r\n\r\n  todo : ITask[] = [];\r\n  inProgress: ITask[] = [];\r\n  done: ITask[] = [];\r\n\r\n  allTasks: ITask[] = [];\r\n\r\n  getTasks: SubscriptionLike;\r\n  isUpdated: SubscriptionLike;\r\n  updateUser: SubscriptionLike;\r\n\r\n  constructor(private _authenticationService : AuthenticationService,\r\n              private _taskService: TaskService,\r\n              protected _router: Router,\r\n              public dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.username = localStorage.getItem(\"cashedUsername\");\r\n    this.email = localStorage.getItem(\"cashedEmail\");\r\n    this.password = localStorage.getItem(\"cashedPassword\");\r\n    this.getAllTasks();\r\n    this.getUser();\r\n  }\r\n\r\n\r\n  user = new FormGroup({\r\n      userName: new FormControl(this.username,Validators.minLength(5)),\r\n      email: new FormControl(this.email,Validators.pattern('^[^\\\\.\\\\s][\\\\w\\\\-]+(\\\\.[\\\\w\\\\-]+)*@([\\\\w-]+\\\\.)+[\\\\w-]{2,}$')),\r\n      password: new FormControl(this.password,Validators.pattern('^(?=.*[a-z].*[a-z])(?=.*[!\"#...\\\\d].*[!\"#...\\\\d]).{8,}$')),\r\n      confirmedPassword: new FormControl(this.password,Validators.required)\r\n    }\r\n  );\r\n\r\n  enableEdit(){\r\n    this.edit = !this.edit;\r\n  }\r\n\r\n  getUser(){\r\n    this.isUpdated = this._authenticationService.get(this.user.value.email).pipe(take(1))\r\n      .subscribe((result)=> {\r\n        this.userP = result;\r\n      });\r\n  }\r\n\r\n  getAllTasks(){\r\n    this.getTasks = this._taskService.getAll()\r\n      .subscribe(data => {\r\n        this.allTasks = data.filter(d => d.username == this.username);\r\n\r\n        this.todo = data.filter(d => d.status == 'TO DO' && d.username == this.username);\r\n        this.inProgress = data.filter(d => d.status == 'DOING' && d.username == this.username);\r\n        this.done = data.filter(d => d.status == 'DONE' && d.username == this.username);\r\n      });\r\n  }\r\n\r\n  editUser(){\r\n    if(this.user.valid) {\r\n      this.updateUser = this._authenticationService.create(this.user.value).subscribe((res) => {\r\n        localStorage.setItem(\"cashedUsername\",res.userName);\r\n        localStorage.setItem(\"cashedEmail\",res.email);\r\n        localStorage.setItem(\"cashedPassword\",res.password);\r\n        this.username = res.userName;\r\n        this.email = res.email;\r\n        this.password = res.password;\r\n        window.location.reload();\r\n      });\r\n    }\r\n  }\r\n\r\n  isDiff(){\r\n    this.isUpdated = this._authenticationService.get(this.user.value.email).pipe(take(1))\r\n      .subscribe((result)=> {\r\n        this.disabled = (result.userName !== this.username) || (result.email !== this.email) || (result.password !== this.password) ;\r\n      });\r\n  }\r\n\r\n  logOut(){\r\n    localStorage.setItem(\"cashedUsername\", \"\");\r\n    this._router.navigateByUrl(`/home`);\r\n  }\r\n\r\n  remove(){\r\n    this.dialog.open(DeleteUserDialog, {\r\n      disableClose:true,\r\n      data: this.userP,\r\n    }).afterOpened().subscribe(()=>{console.log(this.userP)});\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'delete-user-dialog',\r\n  templateUrl: './delete-user-dialog.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class DeleteUserDialog {\r\n\r\n  deleteUser:SubscriptionLike;\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteUserDialog>,\r\n              @Inject(MAT_DIALOG_DATA) public data: IUser,\r\n              private _authenticationService : AuthenticationService,\r\n              protected _router: Router) {\r\n  }\r\n\r\n  onConfirm(){\r\n    this.deleteUser = this._authenticationService.delete(this.data.id).subscribe((res)=> {\r\n      console.log('User Deleted!', res);\r\n      localStorage.setItem(\"cashedUsername\", \"\");\r\n      this._router.navigateByUrl(`/home`);\r\n    })\r\n  }\r\n\r\n  onNoClick(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"profile\">\r\n\r\n\r\n      <div class=\"profile-content\">\r\n\r\n  <mat-grid-list class=\"content\" cols=\"2\" rowHeight=\"2:1.5\">\r\n\r\n    <mat-grid-tile class=\"overview\">\r\n      <mat-grid-tile-header class=\"mat-headline-3 header\">\r\n        <div>Profile</div>\r\n      </mat-grid-tile-header>\r\n      <mat-card>\r\n<!--          <img mat-card-xl-image alt=\"\" src=\"./assets/avatar.png\">-->\r\n        <div class=\"hit-area\">\r\n          <div class=\"hitbox\" id=\"a-1\"></div>\r\n          <div class=\"hitbox\" id=\"a-2\"></div>\r\n          <div class=\"hitbox\" id=\"a-3\"></div>\r\n          <div class=\"hitbox\" id=\"a-4\"></div>\r\n          <div class=\"hitbox\" id=\"a-5\"></div>\r\n          <div class=\"hitbox\" id=\"b-1\"></div>\r\n          <div class=\"hitbox\" id=\"b-2\"></div>\r\n          <div class=\"hitbox\" id=\"b-3\"></div>\r\n          <div class=\"hitbox\" id=\"b-4\"></div>\r\n          <div class=\"hitbox\" id=\"b-5\"></div>\r\n          <div class=\"hitbox\" id=\"c-1\"></div>\r\n          <div class=\"hitbox\" id=\"c-2\"></div>\r\n          <div class=\"hitbox\" id=\"c-3\">\r\n            <button mat-button (click)=\"enableEdit()\"> <img class=\"edit-profile\" alt=\"\" src=\"/assets/nose.jpeg\"> </button>\r\n            <div style=\"text-align: center; margin-right: 8px; color: red\">\r\n            <mat-icon >keyboard_arrow_up</mat-icon>\r\n            </div>\r\n          </div>\r\n          <div class=\"hitbox\" id=\"c-4\"></div>\r\n          <div class=\"hitbox\" id=\"c-5\"></div>\r\n          <div class=\"hitbox\" id=\"d-1\"></div>\r\n          <div class=\"hitbox\" id=\"d-2\"></div>\r\n          <div class=\"hitbox\" id=\"d-3\"></div>\r\n          <div class=\"hitbox\" id=\"d-4\"></div>\r\n          <div class=\"hitbox\" id=\"d-5\"></div>\r\n          <div class=\"hitbox\" id=\"e-1\"></div>\r\n          <div class=\"hitbox\" id=\"e-2\"></div>\r\n          <div class=\"hitbox\" id=\"e-3\"></div>\r\n          <div class=\"hitbox\" id=\"e-4\"></div>\r\n          <div class=\"hitbox\" id=\"e-5\"></div>\r\n\r\n          <div class=\"eye\">\r\n            <div class=\"pupil\"></div>\r\n          </div>\r\n          <div class=\"eye\">\r\n            <div class=\"pupil\"></div>\r\n          </div>\r\n          <div class=\"eyelid\"></div>\r\n          <div class=\"eyelid\"></div>\r\n\r\n        </div>\r\n      </mat-card>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile>\r\n      <div>\r\n      <mat-card class=\"login\">\r\n        <div class=\"login-card\">\r\n          <mat-card-content class=\"login-field\">\r\n            <form class=\"sign-form\" (change)=\"isDiff()\" [formGroup]=\"user\" >\r\n\r\n              <h2 *ngIf=\"!edit\" class=\"title\">Account Information</h2>\r\n              <h2 *ngIf=\"edit\" class=\"title\">Edit Profile</h2>\r\n\r\n              <div>\r\n                <label>Username: </label>\r\n                <mat-form-field class=\"full-width-input\">\r\n                  <input [readonly]=\"!edit\" matInput #userName [(ngModel)]=\"username\" placeholder=\"Username\" maxlength=\"10\" formControlName=\"userName\" required>\r\n                  <mat-hint *ngIf=\"disabled\">{{userName.value?.length || 0}}/10</mat-hint>\r\n                  <mat-error *ngIf=\"edit\"> Minimum Required characters {{userName.value?.length || 0}}/5 </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n\r\n              <div>\r\n                <label>Email: </label>\r\n                <mat-form-field class=\"full-width-input\">\r\n                  <input [readonly]=\"!edit\" matInput [(ngModel)]=\"email\" placeholder=\"Email\" formControlName=\"email\" required>\r\n                  <mat-error *ngIf=\"edit\"> Please provide a valid email address </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div>\r\n                <label>Password: </label>\r\n                <mat-form-field class=\"password-input\">\r\n                  <input [type]=\"hide1 ? 'password' : 'text'\" [readonly]=\"!edit\" matInput #firstPassword [(ngModel)]=\"password\" type=\"password\" placeholder=\"************\" formControlName=\"password\" required>\r\n                  <button class=\"show\" mat-icon-button matSuffix (click)=\"hide1 = !hide1\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide1\">\r\n                    <mat-icon>{{hide1 ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  </button>\r\n                  <mat-error *ngIf=\"edit\"> * Minimum 8 chars in total.</mat-error>\r\n                  <mat-error *ngIf=\"edit\"> * At least two letters.</mat-error>\r\n                  <mat-error *ngIf=\"edit\"> * At least two digits or symbols.</mat-error>\r\n\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div *ngIf=\"edit\">\r\n                <label>Confirm Password: </label>\r\n                <mat-form-field  class=\"full-width-input\">\r\n                  <input [type]=\"hide2 ? 'password' : 'text'\" [readonly]=\"!edit\" matInput show-hide-input #secondPassword type=\"password\" placeholder=\"************\" formControlName=\"confirmedPassword\">\r\n                  <button class=\"show\" mat-icon-button matSuffix (click)=\"hide2 = !hide2\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide2\">\r\n                    <mat-icon>{{hide2 ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  </button>\r\n                  <mat-error *ngIf=\"edit\"> Passwords do not Match </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <div style=\"display: flex;justify-content: space-between\">\r\n              <button [disabled]=\"!disabled || !user.valid\" *ngIf=\"edit\" type=\"submit\" (click)=\"editUser()\" class=\"login-btn\" mat-raised-button color=\"primary\">Save Changes</button>\r\n              <mat-error style=\"padding-top: 25px;\" *ngIf=\"!disabled && edit\">No Changes!</mat-error>\r\n            </div>\r\n          </mat-card-content>\r\n\r\n        </div>\r\n\r\n      </mat-card>\r\n<div style=\"display: flex;justify-content: space-between\">\r\n      <button *ngIf=\"!edit\" type=\"submit\" (click)=\"logOut()\"  mat-raised-button color=\"warn\"><mat-icon class=\"top-icon\">exit_to_app</mat-icon>Log Off</button>\r\n        <button *ngIf=\"!edit\" type=\"submit\" (click)=\"remove()\"  mat-raised-button color=\"warn\"><mat-icon class=\"top-icon\">delete</mat-icon>Delete User</button>\r\n</div>\r\n</div>\r\n    </mat-grid-tile>\r\n\r\n  </mat-grid-list>\r\n\r\n  <mat-grid-list cols=\"1\" rowHeight=\"2:1\">\r\n\r\n    <mat-card class=\"info\">\r\n      <mat-grid-list cols=\"3\" rowHeight=\"2:1\">\r\n\r\n        <mat-grid-tile>\r\n          <div>\r\n            <mat-card-title> <h1>Tasks To Do</h1> </mat-card-title>\r\n            <mat-progress-bar color=\"warn\" mode=\"determinate\" [value]=\"todo.length/allTasks.length*100\"></mat-progress-bar>\r\n            <mat-card-content class=\"progress\">\r\n              {{todo.length}} out of {{allTasks.length}}\r\n            </mat-card-content>\r\n          </div>\r\n        </mat-grid-tile>\r\n\r\n        <mat-grid-tile>\r\n          <div>\r\n            <mat-card-title> <h1>Tasks in Progress</h1> </mat-card-title>\r\n            <mat-progress-bar color=\"warn\" mode=\"determinate\" [value]=\"inProgress.length/allTasks.length*100\"></mat-progress-bar>\r\n            <mat-card-content class=\"progress\">\r\n              {{inProgress.length}} out of {{allTasks.length}}\r\n            </mat-card-content>\r\n          </div>\r\n        </mat-grid-tile>\r\n        <mat-grid-tile>\r\n          <div>\r\n            <mat-card-title> <h1>Finished Tasks</h1> </mat-card-title>\r\n            <mat-progress-bar color=\"warn\" mode=\"determinate\" [value]=\"done.length/allTasks.length*100\"></mat-progress-bar>\r\n            <mat-card-content class=\"progress\">\r\n              {{done.length}} out of {{allTasks.length}}\r\n            </mat-card-content>\r\n          </div>\r\n        </mat-grid-tile>\r\n      </mat-grid-list>\r\n    </mat-card>\r\n\r\n  </mat-grid-list>\r\n\r\n        </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n","<div>\r\n    <div mat-dialog-title class=\"task-id\">Deleting User {{data.userName}}</div>\r\n    <div mat-dialog-content>\r\n        <p class=\"delete-message\">Are you sure you want to delete your account?</p>\r\n    </div>\r\n    <div mat-dialog-actions class=\"add-buttons\">\r\n        <button  class=\"delete-btn\" mat-button (click)=\"onConfirm()\" >Delete Account</button>\r\n        <button class=\"leave\" mat-button (click)=\"onNoClick()\">Go Back</button>\r\n    </div>\r\n</div>\r\n","import {Component, EventEmitter, Inject, Output} from '@angular/core';\r\nimport {AuthenticationService} from '../../../services/users/authentication.service';\r\nimport {IUser} from '../../../model/user.model';\r\nimport {SubscriptionLike} from 'rxjs';\r\nimport {AbstractControl, FormControl, FormGroup, ValidatorFn, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport {TaskService} from '../../../services/tasks/task.service';\r\n\r\n@Component({\r\n  selector: 'sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css','../log-in/log-in.component.css']\r\n})\r\nexport class SignInComponent {\r\n\r\n  hide1 = true;\r\n  hide2 = true;\r\n\r\n  @Output()\r\n  loggedIn = new EventEmitter<any>();\r\n\r\n  //form definition & input validation\r\n  user = new FormGroup({\r\n      userName: new FormControl(null,Validators.minLength(5)),\r\n      email: new FormControl(null,[Validators.pattern('^[^\\\\.\\\\s][\\\\w\\\\-]+(\\\\.[\\\\w\\\\-]+)*@([\\\\w-]+\\\\.)+[\\\\w-]{2,}$'),Validators.required]),\r\n      password: new FormControl(null,Validators.pattern('^(?=.*[a-z].*[a-z])(?=.*[!\"#...\\\\d].*[!\"#...\\\\d]).{8,}$')),\r\n      confirmedPassword: new FormControl(null,Validators.required)\r\n  },\r\n    { validators: [this.userExists('email'),this.matchValidator('password', 'confirmedPassword')]}\r\n  );\r\n\r\n  //user: IUser;\r\n\r\n  createUser:SubscriptionLike;\r\n  getUser:SubscriptionLike;\r\n\r\n  alreadyExists= false;\r\n\r\nconstructor(private _authenticationService : AuthenticationService,private _router: Router,private _taskService: TaskService) {}\r\n\r\n  matchValidator(controlName: string, matchingControlName: string): ValidatorFn {\r\n    return (abstractControl: AbstractControl) => {\r\n      const control = abstractControl.get(controlName);\r\n      const matchingControl = abstractControl.get(matchingControlName);\r\n\r\n      if (matchingControl!.errors && !matchingControl!.errors?.['confirmedValidator']) {\r\n        return null;\r\n      }\r\n\r\n      if (control!.value !== matchingControl!.value) {\r\n        const error = { confirmedValidator: 'Passwords do not match.' };\r\n        matchingControl!.setErrors(error);\r\n        return error;\r\n      } else {\r\n        matchingControl!.setErrors(null);\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  userExists(controlName: string): ValidatorFn {\r\n    return (abstractControl: AbstractControl) => {\r\n      const control = abstractControl.get(controlName);\r\n\r\n      if (control!.errors && !control!.errors?.['existsValidator']) {\r\n        return null;\r\n      }\r\n\r\n      if(this.alreadyExists){\r\n        const error = { existsValidator: 'Email already Exists.' };\r\n        control!.setErrors(error);\r\n        return error;\r\n      }else {\r\n        control!.setErrors(null);\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  retrieve(){\r\n    this.getUser = this._authenticationService.get(this.user.value.email).subscribe((res)=>{\r\n      this.alreadyExists = res != undefined;\r\n      console.log(this.alreadyExists);\r\n    })\r\n  }\r\n\r\n\r\n  onSubmit(){\r\n    if(this.user.valid && !this.alreadyExists) {\r\n      this.createUser = this._authenticationService.create(this.user.value).subscribe((res) => {\r\n        this.loggedIn.emit(this.user.value);\r\n      })\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.createUser){\r\n      this.createUser.unsubscribe();\r\n    }\r\n\r\n   // this.getTasks.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n  }\r\n}\r\n","<div class=\"login-container\">\r\n\r\n<!--  <mat-card class=\"login-eyes\">-->\r\n<!--    <div class=\"hit-area\">-->\r\n<!--      <div class=\"hitbox\" id=\"a-1\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"a-2\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"a-3\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"a-4\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"a-5\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"b-1\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"b-2\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"b-3\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"b-4\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"b-5\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"c-1\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"c-2\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"c-3\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"c-4\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"c-5\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"d-1\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"d-2\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"d-3\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"d-4\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"d-5\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"e-1\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"e-2\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"e-3\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"e-4\"></div>-->\r\n<!--      <div class=\"hitbox\" id=\"e-5\"></div>-->\r\n\r\n<!--      <div class=\"eye\">-->\r\n<!--        <div class=\"pupil\"></div>-->\r\n<!--      </div>-->\r\n<!--      <div class=\"eye\">-->\r\n<!--        <div class=\"pupil\"></div>-->\r\n<!--      </div>-->\r\n<!--      <div class=\"eyelid\"></div>-->\r\n<!--      <div class=\"eyelid\"></div>-->\r\n\r\n<!--      <div class=\"glasses\"></div>-->\r\n<!--      <div class=\"glasses\"></div>-->\r\n\r\n<!--      <div class=\"temple\"></div>-->\r\n<!--      <div class=\"temple\"></div>-->\r\n<!--      <div class=\"middle-temple\"></div>-->\r\n\r\n<!--    </div>-->\r\n<!--  </mat-card>-->\r\n\r\n  <mat-card class=\"login\">\r\n    <div class=\"login-card\">\r\n      <mat-card-content class=\"login-field\">\r\n        <form class=\"sign-form\" (change)=\"retrieve()\" [formGroup]=\"user\" >\r\n\r\n          <h2 class=\"title\">Sign In</h2>\r\n\r\n          <div>\r\n            <label>Username: </label>\r\n            <mat-form-field class=\"full-width-input\">\r\n              <input matInput #userName placeholder=\"Username\" maxlength=\"10\" formControlName=\"userName\" required>\r\n              <mat-hint>{{userName.value?.length || 0}}/10</mat-hint>\r\n              <mat-error> Minimum Required characters {{userName.value?.length || 0}}/5 </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n          <div>\r\n            <label>Email: </label>\r\n            <mat-form-field class=\"full-width-input\">\r\n              <input matInput placeholder=\"Email\" formControlName=\"email\" required>\r\n              <mat-error *ngIf=\"!alreadyExists\"> Please provide a valid email address </mat-error>\r\n              <mat-error *ngIf=\"alreadyExists\"> Email Already Exists </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div>\r\n            <label>Password: </label>\r\n            <mat-form-field class=\"password-input\">\r\n              <input matInput [type]=\"hide1 ? 'password' : 'text'\" #firstPassword type=\"password\" placeholder=\"Password\" formControlName=\"password\" required>\r\n              <button class=\"show\" mat-icon-button matSuffix (click)=\"hide1 = !hide1\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide1\">\r\n                <mat-icon>{{hide1 ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n              </button>\r\n              <mat-error> * Minimum 8 chars in total.</mat-error>\r\n              <mat-error> * At least two letters.</mat-error>\r\n              <mat-error> * At least two digits or symbols.</mat-error>\r\n\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div>\r\n            <label>Confirm Password: </label>\r\n            <mat-form-field class=\"full-width-input\">\r\n              <input matInput [type]=\"hide2 ? 'password' : 'text'\" #secondPassword type=\"password\" placeholder=\"Confirm Password\" formControlName=\"confirmedPassword\" required>\r\n              <button class=\"show\" mat-icon-button matSuffix (click)=\"hide2 = !hide2\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide2\">\r\n                <mat-icon>{{hide2 ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n              </button>\r\n              <mat-error > Passwords do not Match </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n\r\n\r\n          <button [disabled]=\"!user.valid\" type=\"submit\" class=\"login-btn\" (click)=\"onSubmit()\" mat-raised-button color=\"primary\">Create Account</button>\r\n        </form>\r\n      </mat-card-content>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {ITask} from '../../model/task.model';\r\n\r\nconst headers = { 'Content-Type': 'application/json'};\r\nconst baseUrl = 'http://localhost:9000/api/tasks';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<ITask[]> {\r\n    return this.http.get<ITask[]>(baseUrl);\r\n  }\r\n\r\n  get(id: any): Observable<ITask>{\r\n    return this.http.get<ITask>(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  create(data: any): Observable<any> {\r\n    return this.http.post(baseUrl, data);\r\n  }\r\n\r\n  update(id: any, data: any): Observable<any> {\r\n    return this.http.put(`${baseUrl}/${id}`, data,{headers});\r\n  }\r\n\r\n  delete(id: any): Observable<any> {\r\n    return this.http.delete(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    return this.http.delete(baseUrl);\r\n  }\r\n\r\n  findByTitle(title: any): Observable<ITask[]> {\r\n    return this.http.get<ITask[]>(`${baseUrl}?title=${title}`);\r\n  }\r\n\r\n  findLatest(username: any): Observable<any> {\r\n    return this.http.put<any>(`${baseUrl}/latest`, username, {headers});\r\n  }\r\n\r\n  findForUser(username: any): Observable<any> {\r\n    return this.http.put<any>(baseUrl, username, {headers});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {IUser} from '../../model/user.model';\r\n\r\nconst headers = { 'Content-Type': 'application/json'};\r\nconst baseUrl = 'http://localhost:9000/api/users';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  get(email: any): Observable<IUser>{\r\n    return this.http.get<IUser>(`${baseUrl}/${email}`);\r\n  }\r\n\r\n  create(data: any): Observable<IUser> {\r\n    return this.http.post(baseUrl, data);\r\n  }\r\n\r\n  update(id: any, data: any): Observable<any> {\r\n    return this.http.put(`${baseUrl}/${id}`, data,{headers});\r\n  }\r\n\r\n  delete(id: any): Observable<any> {\r\n    return this.http.delete(`${baseUrl}/${id}`);\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"names":["RouterModule","TaskCardComponent","ProfileComponent","LogInComponent","TaskDashboardComponent","SignInComponent","SideNavComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","onSameUrlNavigation","imports","i1","exports","routingComponents","NavigationEnd","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵproperty","_r1","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","cashedUsername","ɵɵlistener","AppComponent_ng_template_15_Template_button_click_4_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","logout","AppComponent_sign_in_17_Template_sign_in_loggedIn_0_listener","$event","_r9","ctx_r8","authorized","AppComponent_log_in_18_Template_log_in_loggedIn_0_listener","_r11","ctx_r10","AppComponent","constructor","_router","_authenticationService","cashedEmail","cashedAvatar","events","subscribe","e","localStorage","getItem","navigationIndex","url","console","log","navigateByUrl","setItem","user","userName","email","password","ngOnInit","ɵɵdirectiveInject","Router","i2","AuthenticationService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_button_3_Template","AppComponent_ng_template_15_Template","AppComponent_sign_in_17_Template","AppComponent_log_in_18_Template","AppComponent_side_nav_19_Template","ɵɵpipeBind1","BrowserModule","BrowserAnimationsModule","DeleteTaskDialog","EditTaskDialog","HttpClientModule","TaskService","FormsModule","ReactiveFormsModule","RouterLink","DeleteUserDialog","MatCardModule","MatInputModule","MatButtonModule","MatToolbarModule","MatSidenavModule","MatCheckboxModule","MatListModule","MatIconModule","AddTaskDialog","CdkDrag","CdkDropList","DragDropModule","MAT_DIALOG_DEFAULT_OPTIONS","MatDialogModule","MatRadioModule","MatOptionModule","MatSelectModule","CdkTableModule","MatMenuModule","MatExpansionModule","MatSnackBarModule","MatPaginatorModule","MatGridListModule","MatChipsModule","MatProgressBarModule","AppModule","bootstrap","provide","useValue","hasBackdrop","declarations","i3","i4","NgClass","NgForOf","NgIf","i5","MatCard","i6","MatButton","i7","MatIcon","i8","CdkDragHandle","i9","MatPaginator","SideNavComponent_mat_nav_list_3_mat_icon_3_Template","SideNavComponent_mat_nav_list_3_mat_icon_4_Template","route_r2","i_r3","ɵɵtextInterpolate1","split","_routes","hide","config","slice","SideNavComponent_Template","SideNavComponent_mat_nav_list_3_Template","SideNavComponent_Template_button_click_6_listener","_r6","_r0","ɵɵreference","toggle","ɵɵclassProp","opened","EventEmitter","MAT_DIALOG_DATA","FormControl","FormGroup","Validators","take","TaskCardComponent_div_0_mat_icon_3_Template","TaskCardComponent_div_0_mat_icon_4_Template","TaskCardComponent_div_0_mat_icon_5_Template","TaskCardComponent_div_0_Template_button_click_6_listener","ctx_r5","deleteTask","TaskCardComponent_div_0_Template_a_click_9_listener","ctx_r7","updateTask","task","priority","id","title","description","_taskService","dialog","refreshTasks","window","open","disableClose","data","afterClosed","emit","MatDialog","inputs","outputs","TaskCardComponent_Template","TaskCardComponent_div_0_Template","dialogRef","_snackBar","ngOnDestroy","unsubscribe","onConfirm","delete","result","snackBarRef","duration","onNoClick","close","MatDialogRef","MatSnackBar","DeleteTaskDialog_Template","DeleteTaskDialog_Template_button_click_7_listener","DeleteTaskDialog_Template_button_click_9_listener","minLength","longDescription","status","required","username","disabled","isUpdated","isDiff","get","pipe","JSON","stringify","isValid","valid","onSubmit","update","dec","confirm","EditTaskDialog_Template","EditTaskDialog_Template_form_change_6_listener","EditTaskDialog_Template_mat_radio_group_ngModelChange_10_listener","EditTaskDialog_Template_mat_radio_group_change_10_listener","EditTaskDialog_Template_input_ngModelChange_21_listener","EditTaskDialog_Template_textarea_ngModelChange_30_listener","EditTaskDialog_Template_textarea_ngModelChange_39_listener","EditTaskDialog_Template_mat_select_ngModelChange_48_listener","EditTaskDialog_Template_mat_select_selectionChange_48_listener","EditTaskDialog_Template_button_click_70_listener","EditTaskDialog_mat_error_72_Template","EditTaskDialog_Template_button_click_73_listener","value","length","_r2","ɵɵpipeBind2","createdAt","updatedAt","transferArrayItem","ɵɵnamespaceSVG","TaskDashboardComponent_div_12_Template_div_cdkDragDropped_0_listener","restoredCtx","_r12","task_r9","$implicit","ctx_r11","editTask","TaskDashboardComponent_div_12_Template_task_card_refreshTasks_1_listener","ctx_r13","TaskDashboardComponent_div_12_div_2_Template","ctx_r2","innerWidth","TaskDashboardComponent_div_20_Template_div_cdkDragDropped_0_listener","_r17","task_r14","ctx_r16","TaskDashboardComponent_div_20_Template_task_card_refreshTasks_1_listener","ctx_r18","TaskDashboardComponent_div_20_div_2_Template","TaskDashboardComponent_div_28_Template_div_cdkDragDropped_0_listener","_r22","task_r19","ctx_r21","TaskDashboardComponent_div_28_Template_task_card_refreshTasks_1_listener","ctx_r23","TaskDashboardComponent_div_28_div_2_Template","handlePageEvent","pageIndex","limit","pageSize","index","getAllTasks","route","todo","inProgress","done","allTasks","showEmpty","ondragenter","params","hidingEmpty","getTasks","getAll","filter","d","sub","event","previousContainer","container","drop","previousIndex","currentIndex","openDialog","ActivatedRoute","TaskDashboardComponent_Template","TaskDashboardComponent_Template_button_click_0_listener","TaskDashboardComponent_Template_mat_card_cdkDropListDropped_9_listener","TaskDashboardComponent_Template_mat_card_cdkDropListEntered_9_listener","TaskDashboardComponent_p_11_Template","TaskDashboardComponent_div_12_Template","TaskDashboardComponent_Template_mat_card_cdkDropListDropped_17_listener","TaskDashboardComponent_Template_mat_card_cdkDropListEntered_17_listener","TaskDashboardComponent_p_19_Template","TaskDashboardComponent_div_20_Template","TaskDashboardComponent_Template_mat_card_cdkDropListDropped_25_listener","TaskDashboardComponent_Template_mat_card_cdkDropListEntered_25_listener","TaskDashboardComponent_p_27_Template","TaskDashboardComponent_div_28_Template","TaskDashboardComponent_Template_mat_paginator_page_29_listener","ɵɵpureFunction0","_c0","ɵɵpureFunction2","_c1","_r3","_c2","getLatest","findLatest","latestId","createTask","create","AddTaskDialog_Template","AddTaskDialog_Template_button_click_50_listener","AddTaskDialog_Template_button_click_52_listener","invalid","pattern","loggedIn","signedIn","reset","logIn","signIn","checkUser","getUser","res","LogInComponent_Template","LogInComponent_Template_form_change_37_listener","LogInComponent_mat_error_40_Template","LogInComponent_Template_button_click_51_listener","LogInComponent_Template_a_click_55_listener","ProfileComponent_div_79_Template_button_click_6_listener","_r18","ctx_r17","hide2","ProfileComponent_div_79_mat_error_9_Template","edit","ɵɵattribute","ProfileComponent_button_81_Template_button_click_0_listener","_r20","ctx_r19","editUser","ProfileComponent_button_84_Template_button_click_0_listener","logOut","ProfileComponent_button_85_Template_button_click_0_listener","_r24","remove","hide1","confirmedPassword","enableEdit","userP","updateUser","location","reload","afterOpened","ProfileComponent_Template","ProfileComponent_Template_button_click_22_listener","ProfileComponent_Template_form_change_50_listener","ProfileComponent_h2_51_Template","ProfileComponent_h2_52_Template","ProfileComponent_Template_input_ngModelChange_57_listener","ProfileComponent_mat_hint_59_Template","ProfileComponent_mat_error_60_Template","ProfileComponent_Template_input_ngModelChange_65_listener","ProfileComponent_mat_error_66_Template","ProfileComponent_Template_input_ngModelChange_71_listener","ProfileComponent_Template_button_click_73_listener","ProfileComponent_mat_error_76_Template","ProfileComponent_mat_error_77_Template","ProfileComponent_mat_error_78_Template","ProfileComponent_div_79_Template","ProfileComponent_button_81_Template","ProfileComponent_mat_error_82_Template","ProfileComponent_button_84_Template","ProfileComponent_button_85_Template","ɵɵtextInterpolate2","deleteUser","DeleteUserDialog_Template","DeleteUserDialog_Template_button_click_7_listener","DeleteUserDialog_Template_button_click_9_listener","validators","userExists","matchValidator","alreadyExists","controlName","matchingControlName","abstractControl","control","matchingControl","errors","error","confirmedValidator","setErrors","existsValidator","retrieve","undefined","createUser","SignInComponent_Template","SignInComponent_Template_form_change_4_listener","SignInComponent_mat_error_22_Template","SignInComponent_mat_error_23_Template","SignInComponent_Template_button_click_30_listener","SignInComponent_Template_button_click_45_listener","SignInComponent_Template_button_click_50_listener","headers","baseUrl","http","post","put","deleteAll","findByTitle","findForUser","ɵɵinject","HttpClient","factory","ɵfac","providedIn","environment","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}